{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"any-agent","text":"<p><code>any-agent</code> is a Python library providing a single interface to different agent frameworks.</p> <p>Warning</p> <p>Compared to traditional code-defined workflows, agent frameworks introduce complexity, additional security implications to consider, and demand much more computational power.</p> <p>Before jumping to use one, carefully consider and evaluate how much value you would get compared to manually defining a sequence of tools and LLM calls.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.11 or newer</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>You can install the bare bones library as follows (only <code>TinyAgent</code> will be available):</p> <pre><code>pip install any-agent\n</code></pre> <p>Or you can install it with the required dependencies for one of more frameworks:</p> <pre><code>pip install any-agent[agno,openai]\n</code></pre> <p>Refer to pyproject.toml for a list of the options available.</p>"},{"location":"agents/","title":"Agents","text":""},{"location":"agents/#defining-agents","title":"Defining Agents","text":"<p>To define any agent system you will always use the same imports:</p> <pre><code>from any_agent import AgentConfig, AnyAgent\n# In these examples, the built-in tools will be used\nfrom any_agent.tools import search_web, visit_webpage\n</code></pre> <p>Check <code>AgentConfig</code> for more info on how to configure agents.</p>"},{"location":"agents/#single-agent","title":"Single Agent","text":"<pre><code>agent = AnyAgent.create(\n    \"openai\",  # See other options under `Frameworks`\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"Use the tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    ),\n)\n</code></pre>"},{"location":"agents/#multi-agent","title":"Multi-Agent","text":"<p>Warning</p> <p>A multi-agent system introduces even more complexity than a single agent.</p> <p>As stated before, carefully consider whether you need to adopt this pattern to solve the task.</p> <pre><code>agent = AnyAgent.create(\n    \"openai\",  # See other options under `Frameworks`\n    AgentConfig(\n        model_id=\"gpt-4.1-mini\",\n        instructions=\"You are the main agent. Use the other available agents to find an answer\",\n    ),\n    managed_agents=[\n        AgentConfig(\n            name=\"search_web_agent\",\n            description=\"An agent that can search the web\",\n            model_id=\"gpt-4.1-nano\",\n            tools=[search_web]\n        ),\n        AgentConfig(\n            name=\"visit_webpage_agent\",\n            description=\"An agent that can visit webpages\",\n            model_id=\"gpt-4.1-nano\",\n            tools=[visit_webpage]\n        )\n    ]\n)\n</code></pre>"},{"location":"agents/#framework-specific-arguments","title":"Framework Specific Arguments","text":"<p>The <code>agent_args</code> parameter in <code>AgentConfig</code> allows you to pass arguments specific to the underlying framework that the agent instance is built on.</p> <p>Example-1: To pass the <code>output_type</code> parameter for structured output, when using the OpenAI Agents SDK:</p> <pre><code>from pydantic import BaseModel\nfrom any_agent import AgentConfig, AgentFramework, AnyAgent\n\nclass BookInfo(BaseModel):\n    title: str\n    author: str\n    publication_year: int\n\nframework = AgentFramework.OPENAI\n\nagent = AnyAgent.create(\n    framework,\n    AgentConfig(\n        model_id=\"gpt-4.1-mini\",\n        instructions=\"Extract book information from text\",\n        agent_args={\n            \"output_type\": BookInfo\n        }\n    )\n)\n</code></pre> <p>Example-2: In smolagents, for structured output one needs to use the <code>grammar</code> parameter. Additionally, <code>planning_interval</code> defines the interval at which the agent will run a planning step.</p> <pre><code>from pydantic import BaseModel\nfrom any_agent import AgentConfig, AgentFramework, AnyAgent\n\n\nframework = AgentFramework.SMOLAGENTS\n\nclass WebPageInfo(BaseModel):\n    title: str\n    summary: str\n\nagent = AnyAgent.create(\n    framework,\n    AgentConfig(\n        model_id=\"gpt-4.1-mini\",\n        instructions=\"Extract webpage title and summary from url\",\n        agent_args={\n            \"planning_interval\": 1,\n            \"grammar\": WebPageInfo\n        }\n    )\n)\n</code></pre>"},{"location":"agents/#running-agents","title":"Running Agents","text":"<p>Regardless of the definition (single-agent or multi-agent), you can run the agent as follows:</p> <pre><code>agent_trace = agent.run(\"Which Agent Framework is the best??\")\nprint(agent_trace.final_output)\n</code></pre> <p>Check <code>AgentTrace</code> for more info on the return type.</p>"},{"location":"agents/#async","title":"Async","text":"<p>If you are running in <code>async</code> context, you should use the equivalent <code>create_async</code> and <code>run_async</code> methods:</p> <pre><code>import asyncio\n\nasync def main():\n    agent = await AnyAgent.create_async(\n        \"openai\",\n        AgentConfig(\n            model_id=\"gpt-4.1-mini\",\n            instructions=\"You are the main agent. Use the other available agents to find an answer\",\n        ),\n        managed_agents=[\n            AgentConfig(\n                name=\"search_web_agent\",\n                description=\"An agent that can search the web\",\n                model_id=\"gpt-4.1-nano\",\n                tools=[search_web]\n            ),\n            AgentConfig(\n                name=\"visit_webpage_agent\",\n                description=\"An agent that can visit webpages\",\n                model_id=\"gpt-4.1-nano\",\n                tools=[visit_webpage]\n            )\n        ]\n    )\n\n    agent_trace = await agent.run_async(\"Which Agent Framework is the best??\")\n    print(agent_trace.final_output)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"agents/#cleaning-up-the-agent","title":"Cleaning up the Agent","text":"<p>When an AnyAgent object is deleted, the python garbage collector cleans up any resources owned by the object. However, when running or re-creating an agent in the same python process (for example, in test scripts) it may be necessary to forcefully shut down the agent to avoid unexpected side affects. For this purpose, <code>agent.exit</code> is available which will shut down all resources the agent was using.</p> <p>For example,</p> <pre><code>agent.run(\"Which agent framework is the best?\")\nagent.exit() # cleans up the agent synchronously\n</code></pre>"},{"location":"evaluation/","title":"Agent Evaluation","text":"<p>Warning</p> <p>The codebase for evaluation is under development and is not yet stable. Use with caution, we welcome contributions.</p> <p>Evaluation using any_agent.evaluation is designed to be a \"trace-first\" evaluation. The evaluation of a trace is not designed to be pass/fail, but is rather a score based on the achievement of user-defined criteria for each example. Agent systems are hyper-specific to each use case, and it's difficult to provide a single set of metrics that would reliably provide the insight needed to make a decision about the effectiveness of an agent.</p> <p>Using any-agent evaluation, you can specify any criteria you wish, and through the LLM-as-a-judge technique, any-agent will evaluate which criteria are satisfied.</p>"},{"location":"evaluation/#example","title":"Example","text":"<p>Using the unified tracing format provided by any-agent's tracing functionality, the trace can be evaluated with user defined criteria. The steps for evaluating an agent are as follows:</p>"},{"location":"evaluation/#run-an-agent-using-any-agent-which-will-produce-a-trace-for-example","title":"Run an agent using any-agent, which will produce a trace. For example","text":"<pre><code>from any_agent import AgentConfig, AnyAgent, TracingConfig\nfrom any_agent.tools import search_web\n\nagent = AnyAgent.create(\n    \"langchain\",\n    AgentConfig(\n        model_id=\"gpt-4o-mini\",\n        tools=[search_web]\n    ),\n    tracing=TracingConfig(console=True, cost_info=False)\n)\n\nagent_trace = agent.run(\"How many seconds would it take for a leopard at full speed to run through Pont des Arts?\")\n</code></pre>"},{"location":"evaluation/#define-an-evaluation-case-either-in-a-yaml-file-or-in-python","title":"Define an evaluation case either in a yaml file or in python:","text":"YAMLPython <p><pre><code># The criteria will be passed to an llm-as-a-judge along with the trace to have as context\n# The points specify the weight given to each criteria when producing the final score\nllm_judge: openai/gpt-4o\ncheckpoints:\n  - points: 1\n    criteria: Ensure that the agent called the search_web tool in order to retrieve the length of Pont des Arts\n  - points: 1\n    criteria: Ensure that the agent called the search_web tool in order to access the top speed of a leopard\n  - points: 1\n    criteria: |\n        Ensure that the agent ran a python snippet to combine the information\n        from the info retrieved from the web searches\n\n# Optionally, you can check whether the final answer is what was expected. Checking this value does not use an LLM\nground_truth:\n  value: 9.63\n  points: 5\n</code></pre> Then in python <pre><code>from any_agent.evaluation.evaluation_case import EvaluationCase\nevaluation_case = EvaluationCase.from_yaml(evaluation_case_path)\n</code></pre></p> <pre><code>from any_agent.evaluation.evaluation_case import EvaluationCase\nevaluation_case = EvaluationCase(\n        ground_truth={ \"value\": \"9\", \"points\": 1.0},\n        checkpoints=[\n            {\"criteria\": \"Did the agent run a calculation\", \"points\": 1},\n            {\"criteria\": \"Did the agent use fewer than 5 steps\", \"points\": 4},\n        ],\n        llm_judge=\"gpt-4o-mini\",\n)\n</code></pre>"},{"location":"evaluation/#run-the-evaluation-using-the-test-case-and-trace","title":"Run the evaluation using the test case and trace","text":"PythonCLI <pre><code>from any_agent.evaluation.evaluate import evaluate\neval_result = evaluate(\n    evaluation_case=evaluation_case,\n    trace=agent_trace,\n    agent_framework=\"openai\",\n)\nprint(f\"Final score: {eval_result.score}\")\nprint(f\"Checkpoint scores: {eval_result.checkpoint_results}\")\n</code></pre> <pre><code>any-agent-evaluate \\\n    --evaluation_case_path \"docs/examples/evaluation_case.yaml\" \\\n    --trace_path \"tests/assets/OPENAI_trace.json\" \\\n    --agent_framework 'OPENAI'\n</code></pre>"},{"location":"instructions/","title":"Agent Instructions (aka System Prompt)","text":"<p><code>any-agent</code> allows you to specify the instruction for the agent (often also referred to as a \"system_prompt\").</p> <p>Warning</p> <p>Some frameworks use complex default instructions for specific agent implementations. Completely replacing those instructions might result in unexpected behavior.</p> <p>In those cases, you might want to instead copy-paste and extend the default instructions. For example, check the <code>ToolCallingAgent</code> default instructions in <code>smolagents</code>.</p> <pre><code>from agents.extensions.handoff_prompt import RECOMMENDED_PROMPT_PREFIX\nfrom any_agent import AgentConfig\n\ninstruction = RECOMMENDED_PROMPT_PREFIX + \"\\nYou are a helpful assistant that can navigate the web.\"\n\nmain_agent = AgentConfig(\n    model_id=\"gpt-4o-mini\",\n    instructions=instruction,\n)\n</code></pre>"},{"location":"logging/","title":"Logging with <code>any-agent</code>","text":"<p><code>any-agent</code> comes with a logger powered by Rich</p>"},{"location":"logging/#quick-start","title":"Quick Start","text":"<p>By default, logging is set up for you. But if you want to customize it, you can call:</p> <pre><code>from any_agent.logging import setup_logger\n\nsetup_logger()\n</code></pre>"},{"location":"logging/#customizing-the-logger","title":"Customizing the Logger","text":"<p>View the docstring in <code>setup_logger</code> for a description of the arguments available .</p>"},{"location":"logging/#example-set-log-level-to-debug","title":"Example: Set Log Level to DEBUG","text":"<pre><code>from any_agent.logging import setup_logger\nimport logging\n\nsetup_logger(level=logging.DEBUG)\n</code></pre>"},{"location":"logging/#example-custom-log-format","title":"Example: Custom Log Format","text":"<pre><code>setup_logger(log_format=\"%(asctime)s - %(levelname)s - %(message)s\")\n</code></pre>"},{"location":"logging/#example-propagate-logs","title":"Example: Propagate Logs","text":"<pre><code>setup_logger(propagate=True)\n</code></pre>"},{"location":"serving/","title":"Serving (A2A)","text":"<p><code>any-agent</code> provides a simple way of serving agents from any of the supported frameworks using the Agent2Agent Protocol (A2A). You can refer to the link for more information on the protocol, as explaining it is out of the scope of this page.</p> <p>Warning</p> <p>The A2A protocol is in early stages of development and so is the functionality provided by <code>any-agent</code> here.</p> <p>In order to use A2A serving, you must first install the 'serve' extra: <code>pip install 'any-agent[serve]'</code></p> <p>Warning</p> <p>Use of A2A serving is currently only supported on Python 3.13 or higher.</p> <p>You can configuring and serve an agent using the <code>ServingConfig</code> and the <code>AnyAgent.serve</code> method.</p>"},{"location":"serving/#example","title":"Example","text":"<p>For illustrative purposes, we are going to define 2 separate scripts, each defining an agent to answer questions about a specific agent framework (either OpenAI Agents SDK or Google ADK):</p> Google ExpertOpenAI Expert <pre><code># google_expert.py\nfrom any_agent import AgentConfig, AnyAgent\nfrom any_agent.config import ServingConfig\nfrom any_agent.tools import search_web\n\nagent = AnyAgent.create(\n    \"google\",\n    AgentConfig(\n        name=\"google_expert\",\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        description=\"An agent that can answer questions specifically about the Google Agents Development Kit (ADK).\",\n        tools=[search_web]\n    )\n)\n\nagent.serve(ServingConfig(port=5001))\n</code></pre> <pre><code># openai_expert.py\nfrom any_agent import AgentConfig, AnyAgent\nfrom any_agent.config import ServingConfig\nfrom any_agent.tools import search_web\n\nagent = AnyAgent.create(\n    \"openai\",\n    AgentConfig(\n        name=\"openai-expert\",\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        description=\"An agent that can answer questions specifically about the OpenAI Agents SDK.\",\n        tools=[search_web]\n    )\n)\n\nagent.serve(ServingConfig(port=5002))\n</code></pre> <p>We can then run each of the scripts in a separate terminal and leave them running in the background.</p> <p>There are multiple options to interact with these agents. We are going to use the example demo UI and follow the instructions to get it running.</p> <p>With the UI running, we can register the 2 new that are being served using their corresponding URLs:</p> Google ExpertOpenAI Expert <p></p> <p></p> <p>Now that the agents are registered, we can interact with the \"host\" agent that will (hopefully) redirect the request to the appropriate expert:</p> <p></p>"},{"location":"tools/","title":"Agent Tools","text":"<p>\ud83d\udc49 View the built-in callable tools that any-agent provides via the API docs</p> <p><code>any-agent</code> provides 2 options to specify what <code>tools</code> are available to your agent: <code>Callable</code>, or <code>MCP</code> (Model Context Protocol).</p> <p>You can use any combination of options in the same agent.</p> <p>Under the hood, <code>any-agent</code> takes care of wrapping the tool so it becomes usable by the selected framework.</p> <p>MCP can either be run locally (MCPStdio) or you can connect to an MCP that is running elsewhere (MCPSse). See SuperGateway for an easy way to turn a Stdio server into an SSE server.</p> CallableMCP (Stdio)MCP (SSE) <pre><code>from any_agent import AgentConfig\nfrom any_agent.tools import search_web\n\nmain_agent = AgentConfig(\n    model_id=\"gpt-4o-mini\",\n    tools=[search_web]\n)\n</code></pre> <pre><code>from any_agent import AgentConfig\nfrom any_agent.config import MCPStdio\n\nmain_agent = AgentConfig(\n    model_id=\"gpt-4o-mini\",\n    tools=[\n        MCPStdio(\n            command=\"docker\",\n            args=[\"run\", \"-i\", \"--rm\", \"mcp/fetch\"],\n            tools=[\"fetch\"]\n        ),\n    ]\n)\n</code></pre> <pre><code>from any_agent import AgentConfig\nfrom any_agent.config import MCPSse\n\nmain_agent = AgentConfig(\n    model_id=\"gpt-4o-mini\",\n    tools=[\n        MCPSse(\n            url=\"http://localhost:8000/sse\"\n        ),\n    ]\n)\n</code></pre>"},{"location":"tracing/","title":"Agent Tracing","text":"<p><code>any-agent</code> uses <code>openinference</code> to generate standardized OpenTelemetry traces for any of the supported <code>Frameworks</code>.</p> <p>An <code>AgentTrace</code> is returned when calling <code>agent.run</code> or <code>agent.run_async</code>.</p>"},{"location":"tracing/#example","title":"Example","text":"<p>By default, tracing to console and cost tracking is enabled. To configure tracing, pass a TracingConfig object <code>TracingConfig</code> when creating an agent.</p> <pre><code>from any_agent import AgentConfig, AnyAgent, TracingConfig\nfrom any_agent.tools import search_web\n\nagent = AnyAgent.create(\n        \"openai\",\n        agent_config=AgentConfig(\n                model_id=\"gpt-4o\",\n                tools=[search_web],\n        ),\n        tracing=TracingConfig(console=False)\n      )\nagent_trace = agent.run(\"Which agent framework is the best?\")\n</code></pre>"},{"location":"tracing/#console-output","title":"Console Output","text":"<p>Tracing will output standardized console output regardless of the framework used.</p> <pre><code>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 LLM \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ninput: Which agent framework is the best?\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ntool_name: search_web\ninput: {'query': 'best agent framework 2023'}\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Top 12 Open-Source Autonomous Agents &amp; Agent Frameworks: The Future of ... The agent architecture came to life in March 2023, but it wasn't until a few    \u2502\n\u2502 months later that it took a grip in the open-source community. The agent landscape may still seem like a \"mad scientist\" kind of experiment, but there are \u2502\n\u2502 already a few insanely powerful models you can try. Top Open Source Autonomous Agents and Agent Frameworks Top 10 AI Agent Frameworks - gocodeo.com The    \u2502\n\u2502 ultimate guide to AI agent frameworks, compare the best tools for building, scaling, and orchestrating intelligent systems. Features Pricing Docs Blog     \u2502\n\u2502 Support. Install Now. Top 10 AI Agent Frameworks. Written By: April 4, 2025. We're well past the phase of \"just prompt it and see what happens.\" As AI     \u2502\n\u2502 agents inch closer to production ... List of Top 10 Multi-Agent Orchestrator Frameworks for Deploying AI ... 3. Bee Agent Framework (IBM) Introduction:    \u2502\n\u2502 The Bee Agent Framework by IBM is a modular and enterprise-focused orchestration platform for managing large-scale multi-agent systems. It is designed to  \u2502\n\u2502 integrate with IBM's AI solutions for optimized workflows and analytics. Features: Modular Architecture: Plug-and-play functionality for custom ... Top 9  \u2502\n\u2502 AI Agent Frameworks as of April 2025 | Shakudo AutoGen is a framework developed by Microsoft that facilitates the creation of AI-powered applications by   \u2502\n\u2502 automating the generation of code, models, and processes needed for complex workflows.It leverages large language models (LLMs) to help developers build,  \u2502\n\u2502 fine-tune, and deploy AI solutions with minimal manual coding. AutoGen is particularly effective at automating the process of generating ... 10 best AI    \u2502\n\u2502 agent frameworks - blog.apify.com Best AI agent framework platforms. AI agent frameworks are just one piece of the puzzle when it comes to building a      \u2502\n\u2502 scalable, commercially viable AI application. Fully featured platforms do more than just offer tooling to facilitate agent development, they also make it  \u2502\n\u2502 easier to integrate with third-party tools, handle cloud hosting, monitor ... Best 5 Frameworks To Build Multi-Agent AI Applications In this example, we   \u2502\n\u2502 specify the prompt task as the code shows. Then, we create a new agent with reasoning=True to make it a thinking agent. When you run                       \u2502\n\u2502 reasoning_ai_agent.py, you should see a result similar to the preview below.. 2. OpenAI Swarm. Swarm is an open-source, experimental agentic framework     \u2502\n\u2502 recently released by OpenAI. It is a lightweight multi-agent orchestration framework. Agentic Framework Showdown: We Tested 8 AI Agent Frameworks They     \u2502\n\u2502 reduce complexity and streamline decision-making as we build our agents. To find the best agentic framework for our client projects, we tested eight of    \u2502\n\u2502 the most promising AI agent frameworks currently available, some relative newborns at less than six months from their first release: Autogen; CrewAI;      \u2502\n\u2502 Langflow; LangGraph; LlamaIndex; n8n ... Comparing Open-Source AI Agent Frameworks - Langfuse Blog This post offers an in-depth look at some of the        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>"},{"location":"tracing/#spans","title":"Spans","text":"<p>Here's what that returned trace spans would look like, accessible via the attribute <code>agent_trace.spans</code>:</p> <pre><code>[\n  {\n    \"name\": \"response\",\n    \"context\": {\n      \"trace_id\": \"0x1ee8d988d05d9c2e64a456dcccbf7a3c\",\n      \"span_id\": \"0xd4a8cd952e71e1d1\",\n      \"trace_state\": \"[]\"\n    },\n    \"kind\": \"SpanKind.INTERNAL\",\n    \"parent_id\": \"0xbea970a46577575a\",\n    \"start_time\": \"2025-04-07T10:20:25.327409Z\",\n    \"end_time\": \"2025-04-07T10:20:26.813604Z\",\n    \"status\": {\n      \"status_code\": \"UNSET\"\n    },\n    \"attributes\": {\n      \"llm.system\": \"openai\",\n      \"output.mime_type\": \"application/json\",\n      \"output.value\": \"{\\\"id\\\":\\\"resp_67f3a6e2d1dc8192b7d68b130f05f79801e7f8b6e38c7e7a\\\",\\\"created_at\\\":1744021218.0,\\\"error\\\":null,\\\"incomplete_details\\\":null,\\\"instructions\\\":\\\"Search the web to answer\\\",\\\"metadata\\\":{},\\\"model\\\":\\\"gpt-4o-2024-08-06\\\",\\\"object\\\":\\\"response\\\",\\\"output\\\":[{\\\"arguments\\\":\\\"{\\\\\\\"query\\\\\\\":\\\\\\\"best agent framework 2023\\\\\\\"}\\\",\\\"call_id\\\":\\\"call_xCZMfOtnbmKS1nGDywFtmCcR\\\",\\\"name\\\":\\\"search_web\\\",\\\"type\\\":\\\"function_call\\\",\\\"id\\\":\\\"fc_67f3a6e351988192a79ec42d68fccbe001e7f8b6e38c7e7a\\\",\\\"status\\\":\\\"completed\\\"}],\\\"parallel_tool_calls\\\":false,\\\"temperature\\\":1.0,\\\"tool_choice\\\":\\\"auto\\\",\\\"tools\\\":[{\\\"name\\\":\\\"search_web\\\",\\\"parameters\\\":{\\\"properties\\\":{\\\"query\\\":{\\\"description\\\":\\\"The search query to perform.\\\",\\\"title\\\":\\\"Query\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"query\\\"],\\\"title\\\":\\\"search_web_args\\\",\\\"type\\\":\\\"object\\\",\\\"additionalProperties\\\":false},\\\"strict\\\":true,\\\"type\\\":\\\"function\\\",\\\"description\\\":\\\"Performs a duckduckgo web search based on your query (think a Google search) then returns the top search results.\\\"}],\\\"top_p\\\":1.0,\\\"max_output_tokens\\\":null,\\\"previous_response_id\\\":null,\\\"reasoning\\\":{\\\"effort\\\":null,\\\"generate_summary\\\":null},\\\"status\\\":\\\"completed\\\",\\\"text\\\":{\\\"format\\\":{\\\"type\\\":\\\"text\\\"}},\\\"truncation\\\":\\\"disabled\\\",\\\"usage\\\":{\\\"input_tokens\\\":89,\\\"input_tokens_details\\\":{\\\"cached_tokens\\\":0},\\\"output_tokens\\\":20,\\\"output_tokens_details\\\":{\\\"reasoning_tokens\\\":0},\\\"total_tokens\\\":109},\\\"user\\\":null,\\\"store\\\":true}\",\n      \"llm.tools.0.tool.json_schema\": \"{\\\"type\\\": \\\"function\\\", \\\"function\\\": {\\\"name\\\": \\\"search_web\\\", \\\"description\\\": \\\"Performs a duckduckgo web search based on your query (think a Google search) then returns the top search results.\\\", \\\"parameters\\\": {\\\"properties\\\": {\\\"query\\\": {\\\"description\\\": \\\"The search query to perform.\\\", \\\"title\\\": \\\"Query\\\", \\\"type\\\": \\\"string\\\"}}, \\\"required\\\": [\\\"query\\\"], \\\"title\\\": \\\"search_web_args\\\", \\\"type\\\": \\\"object\\\", \\\"additionalProperties\\\": false}, \\\"strict\\\": true}}\",\n      \"llm.token_count.completion\": 89,\n      \"llm.token_count.prompt\": 20,\n      \"llm.token_count.total\": 109,\n      \"llm.output_messages.0.message.role\": \"assistant\",\n      \"llm.output_messages.0.message.tool_calls.0.tool_call.id\": \"call_xCZMfOtnbmKS1nGDywFtmCcR\",\n      \"llm.output_messages.0.message.tool_calls.0.tool_call.function.name\": \"search_web\",\n      \"llm.output_messages.0.message.tool_calls.0.tool_call.function.arguments\": \"{\\\"query\\\":\\\"best agent framework 2023\\\"}\",\n      \"llm.input_messages.0.message.role\": \"system\",\n      \"llm.input_messages.0.message.content\": \"Search the web to answer\",\n      \"llm.model_name\": \"gpt-4o-2024-08-06\",\n      \"llm.invocation_parameters\": \"{\\\"id\\\": \\\"resp_67f3a6e2d1dc8192b7d68b130f05f79801e7f8b6e38c7e7a\\\", \\\"created_at\\\": 1744021218.0, \\\"instructions\\\": \\\"Search the web to answer\\\", \\\"metadata\\\": {}, \\\"model\\\": \\\"gpt-4o-2024-08-06\\\", \\\"object\\\": \\\"response\\\", \\\"parallel_tool_calls\\\": false, \\\"temperature\\\": 1.0, \\\"tool_choice\\\": \\\"auto\\\", \\\"top_p\\\": 1.0, \\\"reasoning\\\": {}, \\\"status\\\": \\\"completed\\\", \\\"text\\\": {\\\"format\\\": {\\\"type\\\": \\\"text\\\"}}, \\\"truncation\\\": \\\"disabled\\\", \\\"store\\\": true}\",\n      \"input.mime_type\": \"application/json\",\n      \"input.value\": \"[{\\\"content\\\": \\\"Which agent framework is the best?\\\", \\\"role\\\": \\\"user\\\"}]\",\n      \"llm.input_messages.1.message.role\": \"user\",\n      \"llm.input_messages.1.message.content\": \"Which agent framework is the best?\",\n      \"openinference.span.kind\": \"LLM\"\n    },\n    \"events\": [],\n    \"links\": [],\n    \"resource\": {\n      \"attributes\": {\n        \"telemetry.sdk.language\": \"python\",\n        \"telemetry.sdk.name\": \"opentelemetry\",\n        \"telemetry.sdk.version\": \"1.31.1\",\n        \"service.name\": \"unknown_service\"\n      },\n      \"schema_url\": \"\"\n    }\n  },\n  {\n    \"name\": \"search_web\",\n    \"context\": {\n      \"trace_id\": \"0x1ee8d988d05d9c2e64a456dcccbf7a3c\",\n      \"span_id\": \"0xe8fa92007caee376\",\n      \"trace_state\": \"[]\"\n    },\n    \"kind\": \"SpanKind.INTERNAL\",\n    \"parent_id\": \"0xbea970a46577575a\",\n    \"start_time\": \"2025-04-07T10:20:26.821732Z\",\n    \"end_time\": \"2025-04-07T10:20:28.420378Z\",\n    \"status\": {\n      \"status_code\": \"UNSET\"\n    },\n    \"attributes\": {\n      \"llm.system\": \"openai\",\n      \"tool.name\": \"search_web\",\n      \"input.value\": \"{\\\"query\\\":\\\"best agent framework 2023\\\"}\",\n      \"input.mime_type\": \"application/json\",\n      \"output.value\": \"[Top 12 Open-Source Autonomous Agents &amp; Agent Frameworks: The Future of ...](https://www.taskade.com/blog/top-autonomous-agents/)\\nThe agent architecture came to life in March 2023, but it wasn't until a few months later that it took a grip in the open-source community. The agent landscape may still seem like a \\\"mad scientist\\\" kind of experiment, but there are already a few insanely powerful models you can try. Top Open Source Autonomous Agents and Agent Frameworks\\n[Top 10 AI Agent Frameworks - gocodeo.com](https://www.gocodeo.com/post/top-10-ai-agent-frameworks)\\nThe ultimate guide to AI agent frameworks, compare the best tools for building, scaling, and orchestrating intelligent systems. Features Pricing Docs Blog Support. Install Now. Top 10 AI Agent Frameworks. Written By: April 4, 2025. We're well past the phase of \\\"just prompt it and see what happens.\\\" As AI agents inch closer to production ...\\n[List of Top 10 Multi-Agent Orchestrator Frameworks for Deploying AI ...](https://www.devopsschool.com/blog/list-of-top-10-multi-agent-orchestrator-frameworks-for-deploying-ai-agents/)\\n3. Bee Agent Framework (IBM) Introduction: The Bee Agent Framework by IBM is a modular and enterprise-focused orchestration platform for managing large-scale multi-agent systems. It is designed to integrate with IBM's AI solutions for optimized workflows and analytics. Features: Modular Architecture: Plug-and-play functionality for custom ...\\n[Top 9 AI Agent Frameworks as of April 2025 | Shakudo](https://www.shakudo.io/blog/top-9-ai-agent-frameworks)\\nAutoGen is a framework developed by Microsoft that facilitates the creation of AI-powered applications by automating the generation of code, models, and processes needed for complex workflows.It leverages large language models (LLMs) to help developers build, fine-tune, and deploy AI solutions with minimal manual coding. AutoGen is particularly effective at automating the process of generating ...\\n[10 best AI agent frameworks - blog.apify.com](https://blog.apify.com/10-best-ai-agent-frameworks/)\\nBest AI agent framework platforms. AI agent frameworks are just one piece of the puzzle when it comes to building a scalable, commercially viable AI application. Fully featured platforms do more than just offer tooling to facilitate agent development, they also make it easier to integrate with third-party tools, handle cloud hosting, monitor ...\\n[Best 5 Frameworks To Build Multi-Agent AI Applications](https://getstream.io/blog/multiagent-ai-frameworks/)\\nIn this example, we specify the prompt task as the code shows. Then, we create a new agent with reasoning=True to make it a thinking agent. When you run reasoning_ai_agent.py, you should see a result similar to the preview below.. 2. OpenAI Swarm. Swarm is an open-source, experimental agentic framework recently released by OpenAI. It is a lightweight multi-agent orchestration framework.\\n[Agentic Framework Showdown: We Tested 8 AI Agent Frameworks](https://www.willowtreeapps.com/craft/8-agentic-frameworks-tested)\\nThey reduce complexity and streamline decision-making as we build our agents. To find the best agentic framework for our client projects, we tested eight of the most promising AI agent frameworks currently available, some relative newborns at less than six months from their first release: Autogen; CrewAI; Langflow; LangGraph; LlamaIndex; n8n ...\\n[Comparing Open-Source AI Agent Frameworks - Langfuse Blog](https://langfuse.com/blog/2025-03-19-ai-agent-comparison)\\nThis post offers an in-depth look at some of the leading open-source AI agent frameworks out there: LangGraph, the OpenAI Agents SDK, Smolagents, CrewAI, AutoGen, Semantic Kernel, and LlamaIndex agents. By the time you finish reading, you should have a clearer view of each framework's sweet spot, how they differ, and where they excel in real ...\\n[Choosing the Right AI Agent Framework: LangGraph vs CrewAI vs OpenAI Swarm](https://www.relari.ai/blog/ai-agent-framework-comparison-langgraph-crewai-openai-swarm)\\nWe chose LangGraph, CrewAI, and OpenAI Swarm because they represent the latest schools of thought in agent development. Here's a quick overview: LangGraph: As its name suggests, LangGraph bets on graph architecture as the best way to define and orchestrate agentic workflows. Unlike early versions of LangChain, LangGraph is a well designed framework with many robust and customizable features ...\\n[Best AI Agent Frameworks](https://www.folio3.ai/blog/ai-agent-frameworks/)\\nYour business demands the best AI agent framework to accelerate your project. It should support LLM integration, advanced reasoning, long-term memory, flexible tool coordination, and smooth collaboration between multiple agents. Here we discuss some AI agent frameworks that empower you to achieve unmatched levels of automation and intelligence.\",\n      \"openinference.span.kind\": \"TOOL\"\n    },\n    \"events\": [],\n    \"links\": [],\n    \"resource\": {\n      \"attributes\": {\n        \"telemetry.sdk.language\": \"python\",\n        \"telemetry.sdk.name\": \"opentelemetry\",\n        \"telemetry.sdk.version\": \"1.31.1\",\n        \"service.name\": \"unknown_service\"\n      },\n      \"schema_url\": \"\"\n    }\n  },\n</code></pre>"},{"location":"tracing/#dumping-to-file","title":"Dumping to File","text":"<p>The AgentTrace object is a pydantic model and can be saved to disk via standard pydantic practices:</p> <pre><code>with open(\"output.json\", \"w\", encoding=\"utf-8\") as f:\n  f.write(agent_trace.model_dump_json(indent=2))\n</code></pre>"},{"location":"api/agent/","title":"Agent","text":""},{"location":"api/agent/#agent","title":"Agent","text":""},{"location":"api/agent/#any_agent.AnyAgent","title":"<code>any_agent.AnyAgent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Base abstract class for all agent implementations.</p> <p>This provides a unified interface for different agent frameworks.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>class AnyAgent(ABC):\n    \"\"\"Base abstract class for all agent implementations.\n\n    This provides a unified interface for different agent frameworks.\n    \"\"\"\n\n    def __init__(\n        self,\n        config: AgentConfig,\n        managed_agents: Sequence[AgentConfig] | None = None,\n        tracing: TracingConfig | None = None,\n    ):\n        self.config = config\n        self.managed_agents = managed_agents\n\n        self._mcp_servers: list[_MCPServerBase[Any]] = []\n        self._main_agent_tools: list[Any] = []\n\n        # Tracing is enabled by default\n        self._tracing_config: TracingConfig = tracing or TracingConfig()\n        self._instrumenter: Instrumenter | None = None\n        self._setup_tracing()\n\n    @staticmethod\n    def _get_agent_type_by_framework(\n        framework_raw: AgentFramework | str,\n    ) -&gt; type[AnyAgent]:\n        framework = AgentFramework.from_string(framework_raw)\n\n        if framework is AgentFramework.SMOLAGENTS:\n            from any_agent.frameworks.smolagents import SmolagentsAgent\n\n            return SmolagentsAgent\n\n        if framework is AgentFramework.LANGCHAIN:\n            from any_agent.frameworks.langchain import LangchainAgent\n\n            return LangchainAgent\n\n        if framework is AgentFramework.OPENAI:\n            from any_agent.frameworks.openai import OpenAIAgent\n\n            return OpenAIAgent\n\n        if framework is AgentFramework.LLAMA_INDEX:\n            from any_agent.frameworks.llama_index import LlamaIndexAgent\n\n            return LlamaIndexAgent\n\n        if framework is AgentFramework.GOOGLE:\n            from any_agent.frameworks.google import GoogleAgent\n\n            return GoogleAgent\n\n        if framework is AgentFramework.AGNO:\n            from any_agent.frameworks.agno import AgnoAgent\n\n            return AgnoAgent\n\n        if framework is AgentFramework.TINYAGENT:\n            from any_agent.frameworks.tinyagent import TinyAgent\n\n            return TinyAgent\n\n        assert_never(framework)\n\n    @classmethod\n    def create(\n        cls,\n        agent_framework: AgentFramework | str,\n        agent_config: AgentConfig,\n        managed_agents: list[AgentConfig] | None = None,\n        tracing: TracingConfig | None = None,\n    ) -&gt; AnyAgent:\n        \"\"\"Create an agent using the given framework and config.\"\"\"\n        return asyncio.get_event_loop().run_until_complete(\n            cls.create_async(\n                agent_framework=agent_framework,\n                agent_config=agent_config,\n                managed_agents=managed_agents,\n                tracing=tracing,\n            )\n        )\n\n    @classmethod\n    async def create_async(\n        cls,\n        agent_framework: AgentFramework | str,\n        agent_config: AgentConfig,\n        managed_agents: list[AgentConfig] | None = None,\n        tracing: TracingConfig | None = None,\n    ) -&gt; AnyAgent:\n        \"\"\"Create an agent using the given framework and config.\"\"\"\n        agent_cls = cls._get_agent_type_by_framework(agent_framework)\n        agent = agent_cls(agent_config, managed_agents=managed_agents, tracing=tracing)\n        await agent._load_agent()\n        return agent\n\n    async def _load_tools(\n        self, tools: Sequence[Tool]\n    ) -&gt; tuple[list[Any], list[_MCPServerBase[Any]]]:\n        tools, mcp_servers = await _wrap_tools(tools, self.framework)\n        # Add to agent so that it doesn't get garbage collected\n        self._mcp_servers.extend(mcp_servers)\n        for mcp_server in mcp_servers:\n            tools.extend(mcp_server.tools)\n        return tools, mcp_servers\n\n    def _setup_tracing(self) -&gt; None:\n        \"\"\"Initialize the tracing for the agent.\"\"\"\n        self._tracer_provider = TracerProvider()\n        trace.set_tracer_provider(self._tracer_provider)\n        if not _is_tracing_supported(self.framework):\n            logger.warning(\"Tracing is not yet supported for %s\", self.framework.name)\n            self._instrumenter = None\n            return\n        self._exporter = AnyAgentExporter(self.framework, self._tracing_config)\n        self._tracer_provider.add_span_processor(SimpleSpanProcessor(self._exporter))\n        self._instrumenter = get_instrumenter_by_framework(self.framework)\n        self._instrumenter.instrument(tracer_provider=self._tracer_provider)\n\n    def run(self, prompt: str, **kwargs: Any) -&gt; AgentTrace:\n        \"\"\"Run the agent with the given prompt.\"\"\"\n        return asyncio.get_event_loop().run_until_complete(\n            self.run_async(prompt, **kwargs)\n        )\n\n    def serve(self, serving_config: ServingConfig | None = None) -&gt; None:\n        \"\"\"Serve this agent using the Agent2Agent Protocol (A2A).\n\n        Args:\n            serving_config: See [ServingConfig][any_agent.config.ServingConfig].\n\n        Raises:\n            ImportError: If the `serving` dependencies are not installed.\n\n        \"\"\"\n        from any_agent.serving import _get_a2a_server, serve_a2a\n\n        if serving_config is None:\n            serving_config = ServingConfig()\n        server = _get_a2a_server(self, serving_config=serving_config)\n\n        serve_a2a(server, host=serving_config.host, port=serving_config.port)\n\n    @abstractmethod\n    async def _load_agent(self) -&gt; None:\n        \"\"\"Load the agent instance.\"\"\"\n\n    @abstractmethod\n    async def run_async(self, prompt: str, **kwargs: Any) -&gt; AgentTrace:\n        \"\"\"Run the agent asynchronously with the given prompt.\"\"\"\n\n    @property\n    @abstractmethod\n    def framework(self) -&gt; AgentFramework:\n        \"\"\"The Agent Framework used.\"\"\"\n\n    @property\n    def agent(self) -&gt; Any:\n        \"\"\"The underlying agent implementation from the framework.\n\n        This property is intentionally restricted to maintain framework abstraction\n        and prevent direct dependency on specific agent implementations.\n\n        If you need functionality that relies on accessing the underlying agent:\n        1. Consider if the functionality can be added to the AnyAgent interface\n        2. Submit a GitHub issue describing your use case\n        3. Contribute a PR implementing the needed functionality\n\n        Raises:\n            NotImplementedError: Always raised when this property is accessed\n\n        \"\"\"\n        msg = \"Cannot access the 'agent' property of AnyAgent, if you need to use functionality that relies on the underlying agent framework, please file a Github Issue or we welcome a PR to add the functionality to the AnyAgent class\"\n        raise NotImplementedError(msg)\n\n    def exit(self) -&gt; None:\n        \"\"\"Exit the agent and clean up resources.\"\"\"\n        if self._instrumenter is not None:\n            self._instrumenter.uninstrument()  # otherwise, this gets called in the __del__ method of Tracer\n            self._instrumenter = None\n        self._mcp_servers = []  # drop references to mcp servers so that they get garbage collected\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.agent","title":"<code>agent</code>  <code>property</code>","text":"<p>The underlying agent implementation from the framework.</p> <p>This property is intentionally restricted to maintain framework abstraction and prevent direct dependency on specific agent implementations.</p> <p>If you need functionality that relies on accessing the underlying agent: 1. Consider if the functionality can be added to the AnyAgent interface 2. Submit a GitHub issue describing your use case 3. Contribute a PR implementing the needed functionality</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>Always raised when this property is accessed</p>"},{"location":"api/agent/#any_agent.AnyAgent.framework","title":"<code>framework</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The Agent Framework used.</p>"},{"location":"api/agent/#any_agent.AnyAgent.create","title":"<code>create(agent_framework, agent_config, managed_agents=None, tracing=None)</code>  <code>classmethod</code>","text":"<p>Create an agent using the given framework and config.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>@classmethod\ndef create(\n    cls,\n    agent_framework: AgentFramework | str,\n    agent_config: AgentConfig,\n    managed_agents: list[AgentConfig] | None = None,\n    tracing: TracingConfig | None = None,\n) -&gt; AnyAgent:\n    \"\"\"Create an agent using the given framework and config.\"\"\"\n    return asyncio.get_event_loop().run_until_complete(\n        cls.create_async(\n            agent_framework=agent_framework,\n            agent_config=agent_config,\n            managed_agents=managed_agents,\n            tracing=tracing,\n        )\n    )\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.create_async","title":"<code>create_async(agent_framework, agent_config, managed_agents=None, tracing=None)</code>  <code>async</code> <code>classmethod</code>","text":"<p>Create an agent using the given framework and config.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>@classmethod\nasync def create_async(\n    cls,\n    agent_framework: AgentFramework | str,\n    agent_config: AgentConfig,\n    managed_agents: list[AgentConfig] | None = None,\n    tracing: TracingConfig | None = None,\n) -&gt; AnyAgent:\n    \"\"\"Create an agent using the given framework and config.\"\"\"\n    agent_cls = cls._get_agent_type_by_framework(agent_framework)\n    agent = agent_cls(agent_config, managed_agents=managed_agents, tracing=tracing)\n    await agent._load_agent()\n    return agent\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.exit","title":"<code>exit()</code>","text":"<p>Exit the agent and clean up resources.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>def exit(self) -&gt; None:\n    \"\"\"Exit the agent and clean up resources.\"\"\"\n    if self._instrumenter is not None:\n        self._instrumenter.uninstrument()  # otherwise, this gets called in the __del__ method of Tracer\n        self._instrumenter = None\n    self._mcp_servers = []  # drop references to mcp servers so that they get garbage collected\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.run","title":"<code>run(prompt, **kwargs)</code>","text":"<p>Run the agent with the given prompt.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>def run(self, prompt: str, **kwargs: Any) -&gt; AgentTrace:\n    \"\"\"Run the agent with the given prompt.\"\"\"\n    return asyncio.get_event_loop().run_until_complete(\n        self.run_async(prompt, **kwargs)\n    )\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.run_async","title":"<code>run_async(prompt, **kwargs)</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>Run the agent asynchronously with the given prompt.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>@abstractmethod\nasync def run_async(self, prompt: str, **kwargs: Any) -&gt; AgentTrace:\n    \"\"\"Run the agent asynchronously with the given prompt.\"\"\"\n</code></pre>"},{"location":"api/agent/#any_agent.AnyAgent.serve","title":"<code>serve(serving_config=None)</code>","text":"<p>Serve this agent using the Agent2Agent Protocol (A2A).</p> <p>Parameters:</p> Name Type Description Default <code>serving_config</code> <code>ServingConfig | None</code> <p>See ServingConfig.</p> <code>None</code> <p>Raises:</p> Type Description <code>ImportError</code> <p>If the <code>serving</code> dependencies are not installed.</p> Source code in <code>src/any_agent/frameworks/any_agent.py</code> <pre><code>def serve(self, serving_config: ServingConfig | None = None) -&gt; None:\n    \"\"\"Serve this agent using the Agent2Agent Protocol (A2A).\n\n    Args:\n        serving_config: See [ServingConfig][any_agent.config.ServingConfig].\n\n    Raises:\n        ImportError: If the `serving` dependencies are not installed.\n\n    \"\"\"\n    from any_agent.serving import _get_a2a_server, serve_a2a\n\n    if serving_config is None:\n        serving_config = ServingConfig()\n    server = _get_a2a_server(self, serving_config=serving_config)\n\n    serve_a2a(server, host=serving_config.host, port=serving_config.port)\n</code></pre>"},{"location":"api/config/","title":"Config","text":""},{"location":"api/config/#any_agent.config.AgentConfig","title":"<code>any_agent.config.AgentConfig</code>","text":"<p>               Bases: <code>BaseModel</code></p> Source code in <code>src/any_agent/config.py</code> <pre><code>class AgentConfig(BaseModel):\n    model_config = ConfigDict(extra=\"forbid\")\n\n    model_id: str\n    \"\"\"Select the underlying model used by the agent.\n\n    If you are using the default model_type (LiteLLM), you can refer to [LiteLLM Provider Docs](https://docs.litellm.ai/docs/providers) for the list of providers and how to access them.\n    \"\"\"\n\n    api_base: str | None = None\n    api_key: str | None = None\n\n    description: str | None = None\n    \"\"\"Description of the agent.\"\"\"\n\n    name: str = \"any_agent\"\n    \"\"\"The name of the agent.\n\n    Defaults to `any_agent`.\n    \"\"\"\n\n    instructions: str | None = None\n    \"\"\"Specify the instructions for the agent (often also referred to as a `system_prompt`).\"\"\"\n\n    tools: Sequence[Tool] = Field(default_factory=list)\n    \"\"\"List of tools to be used by the agent.\n\n    See more info at [Tools](../tools.md).\n    \"\"\"\n\n    agent_type: Callable[..., Any] | None = None\n    \"\"\"Control the type of agent class that is used by the framework, and is unique to the framework used.\n\n    Check the individual `Frameworks` pages for more info on the defaults.\n    \"\"\"\n\n    agent_args: MutableMapping[str, Any] | None = None\n    \"\"\"Pass arguments to the instance used by the underlying framework.\n\n    For example, you can pass `output_type` when using the OpenAI Agents SDK:\n\n    ```py\n    from pydantic import BaseModel\n\n    class CalendarEvent(BaseModel):\n        name: str\n        date: str\n        participants: list[str]\n\n    agent = AnyAgent.create(\n        AgentConfig(\n            model_id=\"gpt-4.1-mini\",\n            instructions=\"Extract calendar events from text\",\n            agent_args={\n                \"output_type\": CalendarEvent\n            }\n        )\n    )\n    ```\n    \"\"\"\n\n    model_type: Callable[..., Any] | None = None\n    \"\"\"Control the type of model class that is used by the agent framework, and is unique to the agent framework being used.\n\n    For each framework, we leverage their support for LiteLLM and use it as default model_type, allowing you to use the same model_id syntax across these frameworks.\n    \"\"\"\n\n    model_args: MutableMapping[str, Any] | None = None\n    \"\"\"Pass arguments to the model instance like `temperature`, `top_k`, as well as any other provider-specific parameters.\n\n    Refer to LiteLLM Completion API Docs for more info.\n    \"\"\"\n</code></pre>"},{"location":"api/config/#any_agent.config.AgentConfig.agent_args","title":"<code>agent_args = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Pass arguments to the instance used by the underlying framework.</p> <p>For example, you can pass <code>output_type</code> when using the OpenAI Agents SDK:</p> <pre><code>from pydantic import BaseModel\n\nclass CalendarEvent(BaseModel):\n    name: str\n    date: str\n    participants: list[str]\n\nagent = AnyAgent.create(\n    AgentConfig(\n        model_id=\"gpt-4.1-mini\",\n        instructions=\"Extract calendar events from text\",\n        agent_args={\n            \"output_type\": CalendarEvent\n        }\n    )\n)\n</code></pre>"},{"location":"api/config/#any_agent.config.AgentConfig.agent_type","title":"<code>agent_type = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Control the type of agent class that is used by the framework, and is unique to the framework used.</p> <p>Check the individual <code>Frameworks</code> pages for more info on the defaults.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Description of the agent.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.instructions","title":"<code>instructions = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specify the instructions for the agent (often also referred to as a <code>system_prompt</code>).</p>"},{"location":"api/config/#any_agent.config.AgentConfig.model_args","title":"<code>model_args = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Pass arguments to the model instance like <code>temperature</code>, <code>top_k</code>, as well as any other provider-specific parameters.</p> <p>Refer to LiteLLM Completion API Docs for more info.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.model_id","title":"<code>model_id</code>  <code>instance-attribute</code>","text":"<p>Select the underlying model used by the agent.</p> <p>If you are using the default model_type (LiteLLM), you can refer to LiteLLM Provider Docs for the list of providers and how to access them.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.model_type","title":"<code>model_type = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Control the type of model class that is used by the agent framework, and is unique to the agent framework being used.</p> <p>For each framework, we leverage their support for LiteLLM and use it as default model_type, allowing you to use the same model_id syntax across these frameworks.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.name","title":"<code>name = 'any_agent'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the agent.</p> <p>Defaults to <code>any_agent</code>.</p>"},{"location":"api/config/#any_agent.config.AgentConfig.tools","title":"<code>tools = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of tools to be used by the agent.</p> <p>See more info at Tools.</p>"},{"location":"api/config/#any_agent.config.TracingConfig","title":"<code>any_agent.config.TracingConfig</code>","text":"<p>               Bases: <code>BaseModel</code></p> Source code in <code>src/any_agent/config.py</code> <pre><code>class TracingConfig(BaseModel):\n    model_config = ConfigDict(extra=\"forbid\")\n\n    console: bool = True\n    \"\"\"Whether to show traces in the console.\"\"\"\n\n    llm: str | None = \"yellow\"\n    \"\"\"LLM color in console logs\"\"\"\n\n    tool: str | None = \"blue\"\n    \"\"\"Tool color in console logs\"\"\"\n\n    agent: str | None = None\n    \"\"\"Agent color in console logs\"\"\"\n\n    chain: str | None = None\n    \"\"\"Chain color in console logs\"\"\"\n\n    cost_info: bool = True\n    \"\"\"Whether traces should include cost information\"\"\"\n\n    @model_validator(mode=\"after\")\n    def validate_console_flags(self) -&gt; Self:\n        if self.console and not any([self.llm, self.tool, self.agent, self.chain]):\n            msg = \"At least one of `[self.llm, self.tool, self.agent, self.chain]` must be set\"\n            raise ValueError(msg)\n        return self\n</code></pre>"},{"location":"api/config/#any_agent.config.TracingConfig.agent","title":"<code>agent = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Agent color in console logs</p>"},{"location":"api/config/#any_agent.config.TracingConfig.chain","title":"<code>chain = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Chain color in console logs</p>"},{"location":"api/config/#any_agent.config.TracingConfig.console","title":"<code>console = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether to show traces in the console.</p>"},{"location":"api/config/#any_agent.config.TracingConfig.cost_info","title":"<code>cost_info = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether traces should include cost information</p>"},{"location":"api/config/#any_agent.config.TracingConfig.llm","title":"<code>llm = 'yellow'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>LLM color in console logs</p>"},{"location":"api/config/#any_agent.config.TracingConfig.tool","title":"<code>tool = 'blue'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tool color in console logs</p>"},{"location":"api/config/#any_agent.config.MCPStdio","title":"<code>any_agent.config.MCPStdio</code>","text":"<p>               Bases: <code>BaseModel</code></p> Source code in <code>src/any_agent/config.py</code> <pre><code>class MCPStdio(BaseModel):\n    command: str\n    \"\"\"The executable to run to start the server.\n\n    For example, `docker`, `uvx`, `npx`.\n    \"\"\"\n\n    args: Sequence[str]\n    \"\"\"Command line args to pass to the command executable.\n\n    For example, `[\"run\", \"-i\", \"--rm\", \"mcp/fetch\"]`.\n    \"\"\"\n\n    env: dict[str, str] | None = None\n    \"\"\"The environment variables to set for the server.\"\"\"\n\n    tools: Sequence[str] | None = None\n    \"\"\"List of tool names to use from the MCP Server.\n\n    Use it to limit the tools accessible by the agent.\n    For example, if you use [`mcp/filesystem`](https://hub.docker.com/r/mcp/filesystem),\n    you can pass `tools=[\"read_file\", \"list_directory\"]` to limit the agent to read-only operations.\n    \"\"\"\n\n    client_session_timeout_seconds: float | None = 5\n    \"\"\"the read timeout passed to the MCP ClientSession.\"\"\"\n\n    model_config = ConfigDict(frozen=True, extra=\"forbid\")\n</code></pre>"},{"location":"api/config/#any_agent.config.MCPStdio.args","title":"<code>args</code>  <code>instance-attribute</code>","text":"<p>Command line args to pass to the command executable.</p> <p>For example, <code>[\"run\", \"-i\", \"--rm\", \"mcp/fetch\"]</code>.</p>"},{"location":"api/config/#any_agent.config.MCPStdio.client_session_timeout_seconds","title":"<code>client_session_timeout_seconds = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>the read timeout passed to the MCP ClientSession.</p>"},{"location":"api/config/#any_agent.config.MCPStdio.command","title":"<code>command</code>  <code>instance-attribute</code>","text":"<p>The executable to run to start the server.</p> <p>For example, <code>docker</code>, <code>uvx</code>, <code>npx</code>.</p>"},{"location":"api/config/#any_agent.config.MCPStdio.env","title":"<code>env = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The environment variables to set for the server.</p>"},{"location":"api/config/#any_agent.config.MCPStdio.tools","title":"<code>tools = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of tool names to use from the MCP Server.</p> <p>Use it to limit the tools accessible by the agent. For example, if you use <code>mcp/filesystem</code>, you can pass <code>tools=[\"read_file\", \"list_directory\"]</code> to limit the agent to read-only operations.</p>"},{"location":"api/config/#any_agent.config.MCPSse","title":"<code>any_agent.config.MCPSse</code>","text":"<p>               Bases: <code>BaseModel</code></p> Source code in <code>src/any_agent/config.py</code> <pre><code>class MCPSse(BaseModel):\n    url: str\n    \"\"\"The URL of the server.\"\"\"\n\n    headers: Mapping[str, str] | None = None\n    \"\"\"The headers to send to the server.\"\"\"\n\n    tools: Sequence[str] | None = None\n    \"\"\"List of tool names to use from the MCP Server.\n\n    Use it to limit the tools accessible by the agent.\n    For example, if you use [`mcp/filesystem`](https://hub.docker.com/r/mcp/filesystem),\n    you can pass `tools=[\"read_file\", \"list_directory\"]` to limit the agent to read-only operations.\n    \"\"\"\n\n    client_session_timeout_seconds: float | None = 5\n    \"\"\"the read timeout passed to the MCP ClientSession.\"\"\"\n\n    model_config = ConfigDict(frozen=True)\n</code></pre>"},{"location":"api/config/#any_agent.config.MCPSse.client_session_timeout_seconds","title":"<code>client_session_timeout_seconds = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>the read timeout passed to the MCP ClientSession.</p>"},{"location":"api/config/#any_agent.config.MCPSse.headers","title":"<code>headers = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The headers to send to the server.</p>"},{"location":"api/config/#any_agent.config.MCPSse.tools","title":"<code>tools = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of tool names to use from the MCP Server.</p> <p>Use it to limit the tools accessible by the agent. For example, if you use <code>mcp/filesystem</code>, you can pass <code>tools=[\"read_file\", \"list_directory\"]</code> to limit the agent to read-only operations.</p>"},{"location":"api/config/#any_agent.config.MCPSse.url","title":"<code>url</code>  <code>instance-attribute</code>","text":"<p>The URL of the server.</p>"},{"location":"api/config/#any_agent.config.ServingConfig","title":"<code>any_agent.config.ServingConfig</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configuration for serving an agent using the Agent2Agent Protocol (A2A).</p> <p>We use the example <code>A2ASever</code> from https://github.com/google/A2A/tree/main/samples/python.</p> Source code in <code>src/any_agent/config.py</code> <pre><code>class ServingConfig(BaseModel):\n    \"\"\"Configuration for serving an agent using the Agent2Agent Protocol (A2A).\n\n    We use the example `A2ASever` from https://github.com/google/A2A/tree/main/samples/python.\n    \"\"\"\n\n    model_config = ConfigDict(extra=\"forbid\")\n\n    host: str = \"localhost\"\n    \"\"\"Will be passed as argument to `uvicorn.run`.\"\"\"\n\n    port: int = 5000\n    \"\"\"Will be passed as argument to `uvicorn.run`.\"\"\"\n\n    endpoint: str = \"/\"\n    \"\"\"Will be pass as argument to `Starlette().add_route`\"\"\"\n\n    version: str = \"0.1.0\"\n</code></pre>"},{"location":"api/config/#any_agent.config.ServingConfig.endpoint","title":"<code>endpoint = '/'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Will be pass as argument to <code>Starlette().add_route</code></p>"},{"location":"api/config/#any_agent.config.ServingConfig.host","title":"<code>host = 'localhost'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Will be passed as argument to <code>uvicorn.run</code>.</p>"},{"location":"api/config/#any_agent.config.ServingConfig.port","title":"<code>port = 5000</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Will be passed as argument to <code>uvicorn.run</code>.</p>"},{"location":"api/config/#any_agent.config.AgentFramework","title":"<code>any_agent.config.AgentFramework</code>","text":"<p>               Bases: <code>StrEnum</code></p> Source code in <code>src/any_agent/config.py</code> <pre><code>class AgentFramework(StrEnum):\n    GOOGLE = auto()\n    LANGCHAIN = auto()\n    LLAMA_INDEX = auto()\n    OPENAI = auto()\n    AGNO = auto()\n    SMOLAGENTS = auto()\n    TINYAGENT = auto()\n\n    @classmethod\n    def from_string(cls, value: str | Self) -&gt; Self:\n        if isinstance(value, cls):\n            return value\n\n        formatted_value = value.strip().upper()\n        if formatted_value not in cls.__members__:\n            error_message = (\n                f\"Unsupported agent framework: '{value}'. \"\n                f\"Valid frameworks are: {list(cls.__members__.keys())}\"\n            )\n            raise ValueError(error_message)\n\n        return cls[formatted_value]\n</code></pre>"},{"location":"api/logging/","title":"Logging","text":""},{"location":"api/logging/#any_agent.logging.setup_logger","title":"<code>any_agent.logging.setup_logger(level=logging.ERROR, rich_tracebacks=True, log_format=None, propagate=False, **kwargs)</code>","text":"<p>Configure the any_agent logger with the specified settings.</p> <p>Parameters:</p> Name Type Description Default <code>level</code> <code>int</code> <p>The logging level to use (default: logging.INFO)</p> <code>ERROR</code> <code>rich_tracebacks</code> <code>bool</code> <p>Whether to enable rich tracebacks (default: True)</p> <code>True</code> <code>log_format</code> <code>str | None</code> <p>Optional custom log format string</p> <code>None</code> <code>propagate</code> <code>bool</code> <p>Whether to propagate logs to parent loggers (default: False)</p> <code>False</code> <code>**kwargs</code> <code>Any</code> <p>Additional keyword arguments to pass to RichHandler</p> <code>{}</code> Source code in <code>src/any_agent/logging.py</code> <pre><code>def setup_logger(\n    level: int = logging.ERROR,\n    rich_tracebacks: bool = True,\n    log_format: str | None = None,\n    propagate: bool = False,\n    **kwargs: Any,\n) -&gt; None:\n    \"\"\"Configure the any_agent logger with the specified settings.\n\n    Args:\n        level: The logging level to use (default: logging.INFO)\n        rich_tracebacks: Whether to enable rich tracebacks (default: True)\n        log_format: Optional custom log format string\n        propagate: Whether to propagate logs to parent loggers (default: False)\n        **kwargs: Additional keyword arguments to pass to RichHandler\n\n    \"\"\"\n    logger.setLevel(level)\n    logger.propagate = propagate\n\n    # Remove any existing handlers\n    for handler in logger.handlers[:]:\n        logger.removeHandler(handler)\n\n    handler = RichHandler(rich_tracebacks=rich_tracebacks, markup=True, **kwargs)\n\n    if log_format:\n        formatter = logging.Formatter(log_format)\n        handler.setFormatter(formatter)\n\n    logger.addHandler(handler)\n</code></pre>"},{"location":"api/tools/","title":"Tools","text":""},{"location":"api/tools/#any_agent.tools","title":"<code>any_agent.tools</code>","text":""},{"location":"api/tools/#any_agent.tools.ask_user_verification","title":"<code>ask_user_verification(query)</code>","text":"<p>Asks user to verify the given <code>query</code>.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>The question that requires verification.</p> required Source code in <code>src/any_agent/tools/user_interaction.py</code> <pre><code>def ask_user_verification(query: str) -&gt; str:\n    \"\"\"Asks user to verify the given `query`.\n\n    Args:\n        query: The question that requires verification.\n\n    \"\"\"\n    return input(f\"{query} =&gt; Type your answer here:\")\n</code></pre>"},{"location":"api/tools/#any_agent.tools.search_tavily","title":"<code>search_tavily(query, include_images=False)</code>","text":"<p>Perform a Tavily web search based on your query and return the top search results.</p> <p>See https://blog.tavily.com/getting-started-with-the-tavily-search-api for more information.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>The search query to perform.</p> required <code>include_images</code> <code>bool</code> <p>Whether to include images in the results.</p> <code>False</code> <p>Returns:</p> Type Description <code>str</code> <p>The top search results as a formatted string.</p> Source code in <code>src/any_agent/tools/web_browsing.py</code> <pre><code>def search_tavily(query: str, include_images: bool = False) -&gt; str:\n    \"\"\"Perform a Tavily web search based on your query and return the top search results.\n\n    See https://blog.tavily.com/getting-started-with-the-tavily-search-api for more information.\n\n    Args:\n        query (str): The search query to perform.\n        include_images (bool): Whether to include images in the results.\n\n    Returns:\n        The top search results as a formatted string.\n\n    \"\"\"\n    if not tavily_available:\n        msg = \"You need to `pip install 'tavily-python'` to use this tool\"\n        raise ImportError(msg)\n    api_key = os.getenv(\"TAVILY_API_KEY\")\n    if not api_key:\n        return \"TAVILY_API_KEY environment variable not set.\"\n    try:\n        client = TavilyClient(api_key)\n        response = client.search(query, include_images=include_images)\n        results = response.get(\"results\", [])\n        output = []\n        for result in results:\n            output.append(\n                f\"[{result.get('title', 'No Title')}]({result.get('url', '#')})\\n{result.get('content', '')}\"\n            )\n        if include_images and \"images\" in response:\n            output.append(\"\\nImages:\")\n            for image in response[\"images\"]:\n                output.append(image)\n        return \"\\n\\n\".join(output) if output else \"No results found.\"\n    except Exception as e:\n        return f\"Error performing Tavily search: {e!s}\"\n</code></pre>"},{"location":"api/tools/#any_agent.tools.search_web","title":"<code>search_web(query)</code>","text":"<p>Perform a duckduckgo web search based on your query (think a Google search) then returns the top search results.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>The search query to perform.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The top search results.</p> Source code in <code>src/any_agent/tools/web_browsing.py</code> <pre><code>def search_web(query: str) -&gt; str:\n    \"\"\"Perform a duckduckgo web search based on your query (think a Google search) then returns the top search results.\n\n    Args:\n        query (str): The search query to perform.\n\n    Returns:\n        The top search results.\n\n    \"\"\"\n    ddgs = DDGS()\n    results = ddgs.text(query, max_results=10)\n    return \"\\n\".join(\n        f\"[{result['title']}]({result['href']})\\n{result['body']}\" for result in results\n    )\n</code></pre>"},{"location":"api/tools/#any_agent.tools.send_console_message","title":"<code>send_console_message(user, query)</code>","text":"<p>Send the specified user a message via console and returns their response.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>The question to ask the user.</p> required <code>user</code> <code>str</code> <p>The user to ask the question to.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The user's response.</p> Source code in <code>src/any_agent/tools/user_interaction.py</code> <pre><code>def send_console_message(user: str, query: str) -&gt; str:\n    \"\"\"Send the specified user a message via console and returns their response.\n\n    Args:\n        query: The question to ask the user.\n        user: The user to ask the question to.\n\n    Returns:\n        str: The user's response.\n\n    \"\"\"\n    return Prompt.ask(f\"{query}\\n{user}\")\n</code></pre>"},{"location":"api/tools/#any_agent.tools.show_final_output","title":"<code>show_final_output(answer)</code>","text":"<p>Show the final answer to the user.</p> <p>Parameters:</p> Name Type Description Default <code>answer</code> <code>str</code> <p>The final answer.</p> required Source code in <code>src/any_agent/tools/user_interaction.py</code> <pre><code>def show_final_output(answer: str) -&gt; str:\n    \"\"\"Show the final answer to the user.\n\n    Args:\n        answer: The final answer.\n\n    \"\"\"\n    logger.info(f\"Final output: {answer}\")\n    return answer\n</code></pre>"},{"location":"api/tools/#any_agent.tools.show_plan","title":"<code>show_plan(plan)</code>","text":"<p>Show the current plan to the user.</p> <p>Parameters:</p> Name Type Description Default <code>plan</code> <code>str</code> <p>The current plan.</p> required Source code in <code>src/any_agent/tools/user_interaction.py</code> <pre><code>def show_plan(plan: str) -&gt; str:\n    \"\"\"Show the current plan to the user.\n\n    Args:\n        plan: The current plan.\n\n    \"\"\"\n    logger.info(f\"Current plan: {plan}\")\n    return plan\n</code></pre>"},{"location":"api/tools/#any_agent.tools.visit_webpage","title":"<code>visit_webpage(url)</code>","text":"<p>Visits a webpage at the given url and reads its content as a markdown string. Use this to browse webpages.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The url of the webpage to visit.</p> required Source code in <code>src/any_agent/tools/web_browsing.py</code> <pre><code>def visit_webpage(url: str) -&gt; str:\n    \"\"\"Visits a webpage at the given url and reads its content as a markdown string. Use this to browse webpages.\n\n    Args:\n        url: The url of the webpage to visit.\n\n    \"\"\"\n    try:\n        response = requests.get(url)\n        response.raise_for_status()\n\n        markdown_content = markdownify(response.text).strip()  # type: ignore[no-untyped-call]\n\n        markdown_content = re.sub(r\"\\n{2,}\", \"\\n\", markdown_content)\n\n        return _truncate_content(markdown_content, 10000)\n    except RequestException as e:\n        return f\"Error fetching the webpage: {e!s}\"\n    except Exception as e:\n        return f\"An unexpected error occurred: {e!s}\"\n</code></pre>"},{"location":"api/tracing/","title":"Tracing","text":""},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace","title":"<code>any_agent.tracing.trace.AgentTrace</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A trace that can be exported to JSON or printed to the console.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>class AgentTrace(BaseModel):\n    \"\"\"A trace that can be exported to JSON or printed to the console.\"\"\"\n\n    spans: list[AgentSpan] = Field(default_factory=list)\n    \"\"\"A list of [`AgentSpan`][any_agent.tracing.trace.AgentSpan] that form the trace.\n    \"\"\"\n\n    final_output: str | None = None\n    \"\"\"Contains the final output message returned by the agent.\n    \"\"\"\n\n    model_config = ConfigDict(arbitrary_types_allowed=True)\n\n    def _invalidate_usage_and_cost_cache(self) -&gt; None:\n        \"\"\"Clear the cached usage_and_cost property if it exists.\"\"\"\n        if \"usage\" in self.__dict__:\n            del self.usage\n        if \"cost\" in self.__dict__:\n            del self.cost\n\n    def add_span(self, span: AgentSpan) -&gt; None:\n        \"\"\"Add an AgentSpan to the trace and clear the usage_and_cost cache if present.\"\"\"\n        self.spans.append(span)\n        self._invalidate_usage_and_cost_cache()\n\n    def add_spans(self, spans: list[AgentSpan]) -&gt; None:\n        \"\"\"Add a list of AgentSpans to the trace and clear the usage_and_cost cache if present.\"\"\"\n        self.spans.extend(spans)\n        self._invalidate_usage_and_cost_cache()\n\n    @property\n    def duration(self) -&gt; timedelta:\n        \"\"\"Returns the duration of the AGENT span named 'any_agent' as a datetime.timedelta object.\n\n        The duration is computed from the span's start and end time (in nanoseconds).\n        This functionality relies on the trace behavior where we create a span named 'any_agent' for each agent run,\n        which is defined in each agent framework's `run` function.\n\n        Raises ValueError if there are no spans, if the AGENT span is not found, or if start/end times are missing.\n        \"\"\"\n        if not self.spans:\n            msg = \"No spans found in trace\"\n            raise ValueError(msg)\n        for span in self.spans:\n            if span.attributes.get(\"any_agent.run_id\"):\n                if span.start_time is not None and span.end_time is not None:\n                    duration_ns = span.end_time - span.start_time\n                    return timedelta(seconds=duration_ns / 1_000_000_000)\n                msg = \"Start or end time is missing for the AGENT span\"\n                raise ValueError(msg)\n        msg = \"Span with any_agent.run_id not found in trace\"\n        raise ValueError(msg)\n\n    @cached_property\n    def usage(self) -&gt; UsageInfo:\n        \"\"\"The current total token usage statistics for this trace. Cached after first computation.\"\"\"\n        counts: list[CountInfo] = []\n        for span in self.spans:\n            if span.attributes and \"cost_prompt\" in span.attributes:\n                count = CountInfo(\n                    token_count_prompt=span.attributes[\"llm.token_count.prompt\"],\n                    token_count_completion=span.attributes[\n                        \"llm.token_count.completion\"\n                    ],\n                )\n                counts.append(count)\n        total_tokens = sum(\n            count.token_count_prompt + count.token_count_completion for count in counts\n        )\n        total_token_count_prompt = sum(count.token_count_prompt for count in counts)\n        total_token_count_completion = sum(\n            count.token_count_completion for count in counts\n        )\n        return UsageInfo(\n            total_tokens=total_tokens,\n            total_token_count_prompt=total_token_count_prompt,\n            total_token_count_completion=total_token_count_completion,\n        )\n\n    @cached_property\n    def cost(self) -&gt; CostInfo:\n        \"\"\"The current total cost statistics for this trace. Cached after first computation.\"\"\"\n        costs: list[CostInfo] = []\n        for span in self.spans:\n            if span.attributes and \"cost_prompt\" in span.attributes:\n                total_cost = (\n                    span.attributes[\"cost_prompt\"] + span.attributes[\"cost_completion\"]\n                )\n                cost = CostInfo(\n                    cost_prompt=span.attributes[\"cost_prompt\"],\n                    cost_completion=span.attributes[\"cost_completion\"],\n                    total_cost=total_cost,\n                )\n                costs.append(cost)\n        total_cost_prompt = sum(cost.cost_prompt for cost in costs)\n        total_cost_completion = sum(cost.cost_completion for cost in costs)\n        return CostInfo(\n            cost_prompt=total_cost_prompt,\n            cost_completion=total_cost_completion,\n            total_cost=total_cost_prompt + total_cost_completion,\n        )\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.cost","title":"<code>cost</code>  <code>cached</code> <code>property</code>","text":"<p>The current total cost statistics for this trace. Cached after first computation.</p>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.duration","title":"<code>duration</code>  <code>property</code>","text":"<p>Returns the duration of the AGENT span named 'any_agent' as a datetime.timedelta object.</p> <p>The duration is computed from the span's start and end time (in nanoseconds). This functionality relies on the trace behavior where we create a span named 'any_agent' for each agent run, which is defined in each agent framework's <code>run</code> function.</p> <p>Raises ValueError if there are no spans, if the AGENT span is not found, or if start/end times are missing.</p>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.final_output","title":"<code>final_output = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Contains the final output message returned by the agent.</p>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.spans","title":"<code>spans = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A list of <code>AgentSpan</code> that form the trace.</p>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.usage","title":"<code>usage</code>  <code>cached</code> <code>property</code>","text":"<p>The current total token usage statistics for this trace. Cached after first computation.</p>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.add_span","title":"<code>add_span(span)</code>","text":"<p>Add an AgentSpan to the trace and clear the usage_and_cost cache if present.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>def add_span(self, span: AgentSpan) -&gt; None:\n    \"\"\"Add an AgentSpan to the trace and clear the usage_and_cost cache if present.\"\"\"\n    self.spans.append(span)\n    self._invalidate_usage_and_cost_cache()\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentTrace.add_spans","title":"<code>add_spans(spans)</code>","text":"<p>Add a list of AgentSpans to the trace and clear the usage_and_cost cache if present.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>def add_spans(self, spans: list[AgentSpan]) -&gt; None:\n    \"\"\"Add a list of AgentSpans to the trace and clear the usage_and_cost cache if present.\"\"\"\n    self.spans.extend(spans)\n    self._invalidate_usage_and_cost_cache()\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentSpan","title":"<code>any_agent.tracing.trace.AgentSpan</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A span that can be exported to JSON or printed to the console.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>class AgentSpan(BaseModel):\n    \"\"\"A span that can be exported to JSON or printed to the console.\"\"\"\n\n    name: str\n    kind: SpanKind\n    parent: SpanContext | None = None\n    start_time: int | None = None\n    end_time: int | None = None\n    status: Status\n    context: SpanContext\n    attributes: dict[str, Any]\n    links: list[Link]\n    events: list[Event]\n    resource: Resource\n\n    model_config = ConfigDict(arbitrary_types_allowed=False)\n\n    @classmethod\n    def from_readable_span(cls, readable_span: \"ReadableSpan\") -&gt; \"AgentSpan\":\n        \"\"\"Create an AgentSpan from a ReadableSpan.\"\"\"\n        return cls(\n            name=readable_span.name,\n            kind=SpanKind.from_otel(readable_span.kind),\n            parent=SpanContext.from_otel(readable_span.parent),\n            start_time=readable_span.start_time,\n            end_time=readable_span.end_time,\n            status=Status.from_otel(readable_span.status),\n            context=SpanContext.from_otel(readable_span.context),\n            attributes=dict(readable_span.attributes)\n            if readable_span.attributes\n            else {},\n            links=[Link.from_otel(link) for link in readable_span.links],\n            events=[Event.from_otel(event) for event in readable_span.events],\n            resource=Resource.from_otel(readable_span.resource),\n        )\n\n    def add_cost_info(self) -&gt; None:\n        \"\"\"Extend attributes with `TokenUseAndCost`.\"\"\"\n        cost_info = extract_token_use_and_cost(self.attributes)\n        if cost_info:\n            self.set_attributes(cost_info.model_dump(exclude_none=True))\n\n    def set_attributes(self, attributes: Mapping[str, AttributeValue]) -&gt; None:\n        \"\"\"Set attributes for the span.\"\"\"\n        for key, value in attributes.items():\n            if key in self.attributes:\n                logger.warning(\"Overwriting attribute %s with %s\", key, value)\n            self.attributes[key] = value\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentSpan.add_cost_info","title":"<code>add_cost_info()</code>","text":"<p>Extend attributes with <code>TokenUseAndCost</code>.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>def add_cost_info(self) -&gt; None:\n    \"\"\"Extend attributes with `TokenUseAndCost`.\"\"\"\n    cost_info = extract_token_use_and_cost(self.attributes)\n    if cost_info:\n        self.set_attributes(cost_info.model_dump(exclude_none=True))\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentSpan.from_readable_span","title":"<code>from_readable_span(readable_span)</code>  <code>classmethod</code>","text":"<p>Create an AgentSpan from a ReadableSpan.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>@classmethod\ndef from_readable_span(cls, readable_span: \"ReadableSpan\") -&gt; \"AgentSpan\":\n    \"\"\"Create an AgentSpan from a ReadableSpan.\"\"\"\n    return cls(\n        name=readable_span.name,\n        kind=SpanKind.from_otel(readable_span.kind),\n        parent=SpanContext.from_otel(readable_span.parent),\n        start_time=readable_span.start_time,\n        end_time=readable_span.end_time,\n        status=Status.from_otel(readable_span.status),\n        context=SpanContext.from_otel(readable_span.context),\n        attributes=dict(readable_span.attributes)\n        if readable_span.attributes\n        else {},\n        links=[Link.from_otel(link) for link in readable_span.links],\n        events=[Event.from_otel(event) for event in readable_span.events],\n        resource=Resource.from_otel(readable_span.resource),\n    )\n</code></pre>"},{"location":"api/tracing/#any_agent.tracing.trace.AgentSpan.set_attributes","title":"<code>set_attributes(attributes)</code>","text":"<p>Set attributes for the span.</p> Source code in <code>src/any_agent/tracing/trace.py</code> <pre><code>def set_attributes(self, attributes: Mapping[str, AttributeValue]) -&gt; None:\n    \"\"\"Set attributes for the span.\"\"\"\n    for key, value in attributes.items():\n        if key in self.attributes:\n            logger.warning(\"Overwriting attribute %s with %s\", key, value)\n        self.attributes[key] = value\n</code></pre>"},{"location":"cookbook/mcp_agent/","title":"Creating an agent with MCP","text":"In\u00a0[\u00a0]: Copied! <pre>%pip install 'any-agent[all]'\n\nimport nest_asyncio\n\nnest_asyncio.apply()\n</pre> %pip install 'any-agent[all]'  import nest_asyncio  nest_asyncio.apply() In\u00a0[\u00a0]: Copied! <pre>import os\nfrom getpass import getpass\n\nif \"OPENAI_API_KEY\" not in os.environ:\n    print(\"OPENAI_API_KEY not found in environment!\")\n    api_key = getpass(\"Please enter your OPENAI_API_KEY: \")\n    os.environ[\"OPENAI_API_KEY\"] = api_key\n    print(\"OPENAI_API_KEY set for this session!\")\nelse:\n    print(\"OPENAI_API_KEY found in environment.\")\n</pre> import os from getpass import getpass  if \"OPENAI_API_KEY\" not in os.environ:     print(\"OPENAI_API_KEY not found in environment!\")     api_key = getpass(\"Please enter your OPENAI_API_KEY: \")     os.environ[\"OPENAI_API_KEY\"] = api_key     print(\"OPENAI_API_KEY set for this session!\") else:     print(\"OPENAI_API_KEY found in environment.\") In\u00a0[3]: Copied! <pre>from any_agent import AgentConfig, AnyAgent\nfrom any_agent.config import MCPStdio\n\n# This MCP Tool relies upon uvx https://docs.astral.sh/uv/getting-started/installation/\ntime_tool = MCPStdio(\n    command=\"uvx\",\n    args=[\"mcp-server-time\", \"--local-timezone=America/New_York\"],\n    tools=[\n        \"get_current_time\",\n    ],\n)\n\n# This MCP tool relies upon npx https://docs.npmjs.com/cli/v8/commands/npx which comes standard with npm\nairbnb_tool = MCPStdio(\n    command=\"npx\", args=[\"-y\", \"@openbnb/mcp-server-airbnb\", \"--ignore-robots-txt\"]\n)\n\n\n# This is a custom tool that we will provide to the agent. For the agent to use the tool, we must provide a docstring\n# and also have proper python typing for input and output parameters\ndef send_message(message: str) -&gt; str:\n    \"\"\"Display a message to the user and wait for their response.\n\n    Args:\n        message: str\n            The message to be displayed to the user.\n\n    Returns:\n        str: The response from the user.\n\n    \"\"\"\n    return input(message + \" \")\n\n\nagent = AnyAgent.create(\n    \"openai\",  # See all options in https://mozilla-ai.github.io/any-agent/\n    AgentConfig(model_id=\"gpt-4.1-mini\", tools=[airbnb_tool, time_tool, send_message]),\n)\n</pre> from any_agent import AgentConfig, AnyAgent from any_agent.config import MCPStdio  # This MCP Tool relies upon uvx https://docs.astral.sh/uv/getting-started/installation/ time_tool = MCPStdio(     command=\"uvx\",     args=[\"mcp-server-time\", \"--local-timezone=America/New_York\"],     tools=[         \"get_current_time\",     ], )  # This MCP tool relies upon npx https://docs.npmjs.com/cli/v8/commands/npx which comes standard with npm airbnb_tool = MCPStdio(     command=\"npx\", args=[\"-y\", \"@openbnb/mcp-server-airbnb\", \"--ignore-robots-txt\"] )   # This is a custom tool that we will provide to the agent. For the agent to use the tool, we must provide a docstring # and also have proper python typing for input and output parameters def send_message(message: str) -&gt; str:     \"\"\"Display a message to the user and wait for their response.      Args:         message: str             The message to be displayed to the user.      Returns:         str: The response from the user.      \"\"\"     return input(message + \" \")   agent = AnyAgent.create(     \"openai\",  # See all options in https://mozilla-ai.github.io/any-agent/     AgentConfig(model_id=\"gpt-4.1-mini\", tools=[airbnb_tool, time_tool, send_message]), ) <pre>/Users/nbrake/scm/any-agent/.venv/lib/python3.13/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n</pre> In\u00a0[4]: Copied! <pre>prompt = \"\"\"\nI am looking to book an airbnb next weekend near Ohiopyle, PA. Can you help me plan this? Figure out the time, then ask me some questions and lets figure this out together.\n\"\"\"\n\nagent_trace = agent.run(prompt)\n</pre> prompt = \"\"\" I am looking to book an airbnb next weekend near Ohiopyle, PA. Can you help me plan this? Figure out the time, then ask me some questions and lets figure this out together. \"\"\"  agent_trace = agent.run(prompt) <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: get_current_time\n</pre> <pre>input: {'timezone': 'America/New_York'}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 {\"type\":\"text\",\"text\":\"{\\n  \"timezone\": \"America/New_York\",\\n  \"datetime\": \"2025-05-21T16:01:19-04:00\",\\n       \u2502\n\u2502 \"is_dst\": true\\n}\",\"annotations\":null}                                                                          \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: send_message\n</pre> <pre>input: {'message': 'Today is May 21, 2025, and you are looking to book an Airbnb near Ohiopyle, PA for next \nweekend. That means your check-in date would likely be Friday, May 30, 2025, and check-out could be Sunday, June 1,\n2025 (or another day if you prefer).\\n\\nTo help narrow down the options, could you please answer a few \nquestions?\\n1. How many guests will be staying?\\n2. Do you have a preferred price range per night?\\n3. Are there \nany specific amenities or features you want (e.g., pet-friendly, hot tub, kitchen)?\\n4. Would you prefer a cabin, \nhouse, or another type of accommodation?\\n5. Any other preferences or requirements?'}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Those days sound great. It'll be 2 adults, 1 infant, and 1 dog. I don't have a specific budget but would be     \u2502\n\u2502 interested in a few options for each budget. I want someplace woodsy.                                           \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: airbnb_search\n</pre> <pre>input: {'location': 'Ohiopyle, PA', 'checkin': '2025-05-30', 'checkout': '2025-06-01', 'adults': 2, 'children': 0, \n'infants': 1, 'pets': 1, 'maxPrice': 150}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 {\"type\":\"text\",\"text\":\"{\\n  \"searchUrl\":                                                                        \u2502\n\u2502 \"https://www.airbnb.com/s/Ohiopyle%2C%20PA/homes?checkin=2025-05-30&amp;checkout=2025-06-01&amp;adults=2&amp;children=0&amp;inf \u2502\n\u2502 ants=1&amp;pets=1&amp;price_max=150\",\\n  \"searchResults\": [\\n    {\\n      \"id\": \"878385397115028668\",\\n      \"url\":     \u2502\n\u2502 \"https://www.airbnb.com/rooms/878385397115028668\",\\n      \"demandStayListing\": {\\n        \"id\":                 \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6ODc4Mzg1Mzk3MTE1MDI4NjY4\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Log Cabin 5\"\\n          }\\n        },\\n        \"location\": {\\n     \u2502\n\u2502 \"coordinate\": {\\n            \"latitude\": 39.76693,\\n            \"longitude\": -79.46796\\n          }\\n           \u2502\n\u2502 }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free  \u2502\n\u2502 cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free     \u2502\n\u2502 cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.91 out of 5 average rating,  11 reviews\",\\n             \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$211 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$106 x 2      \u2502\n\u2502 nights: $211\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"1224643624417572953\",\\n      \"url\":              \u2502\n\u2502 \"https://www.airbnb.com/rooms/1224643624417572953\",\\n      \"demandStayListing\": {\\n        \"id\":                \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MTIyNDY0MzYyNDQxNzU3Mjk1Mw==\",\\n        \"description\": {\\n          \"name\": {\\n        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Glamping Pod\"\\n          }\\n        },\\n        \"location\": {\\n    \u2502\n\u2502 \"coordinate\": {\\n            \"latitude\": 40.03029,\\n            \"longitude\": -78.95041\\n          }\\n           \u2502\n\u2502 }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free  \u2502\n\u2502 cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free     \u2502\n\u2502 cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.97 out of 5 average rating,  31 reviews\",\\n             \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$274 for 2 nights,      \u2502\n\u2502 originally $502\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n               \u2502\n\u2502 \"priceDetails\": \"$137 x 2 nights: $274, \"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":                       \u2502\n\u2502 \"1132527402869122725\",\\n      \"url\": \"https://www.airbnb.com/rooms/1132527402869122725\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTEzMjUyNzQwMjg2OTEyMjcyNQ==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Eagles Nest @   \u2502\n\u2502 Sleepy Hollow\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                     \u2502\n\u2502 \"latitude\": 39.63791,\\n            \"longitude\": -79.11291\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n            \u2502\n\u2502 \"primaryLine\": \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"5.0 out of 5      \u2502\n\u2502 average rating,  15 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                    \u2502\n\u2502 \"accessibilityLabel\": \"$228 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$114 x 2 nights: $228\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"658658760148288301\",\\n      \"url\": \"https://www.airbnb.com/rooms/658658760148288301\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NjU4NjU4NzYwMTQ4Mjg4MzAx\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Valley View     \u2502\n\u2502 Sunrise Site @TheGreat48Escape\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n    \u2502\n\u2502 \"latitude\": 40.09503,\\n            \"longitude\": -79.08348\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n              \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  25 reviews\",\\n      \"structuredDisplayPrice\": {\\n          \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$74 for 2 nights\"\\n        },\\n        \"explanationData\":    \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$37 x 2 nights: $74\"\\n        }\\n      }\\n   \u2502\n\u2502 },\\n    {\\n      \"id\": \"955289529577335421\",\\n      \"url\": \"https://www.airbnb.com/rooms/955289529577335421\",\\n \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTU1Mjg5NTI5NTc3MzM1NDIx\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Nanny\u2019s Rustic  \u2502\n\u2502 Retreat: Lil\u2019 Red\u2019s Nest\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n          \u2502\n\u2502 \"latitude\": 40.15143,\\n            \"longitude\": -79.6988\\n          }\\n        }\\n      },\\n      \"badges\":     \u2502\n\u2502 \"Superhost\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n                   \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"4.83 out of 5 average rating,  6 reviews\",\\n      \"structuredDisplayPrice\": {\\n          \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$160 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$80 x 2 nights: $160\"\\n        }\\n      }\\n  \u2502\n\u2502 },\\n    {\\n      \"id\": \"882156783252661245\",\\n      \"url\": \"https://www.airbnb.com/rooms/882156783252661245\",\\n \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6ODgyMTU2NzgzMjUyNjYxMjQ1\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Deer Dwelling @ \u2502\n\u2502 Sleepy Hollow\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                     \u2502\n\u2502 \"latitude\": 39.63903,\\n            \"longitude\": -79.11564\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n            \u2502\n\u2502 \"primaryLine\": \"1 king bed\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.89 out of 5 \u2502\n\u2502 average rating,  19 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                    \u2502\n\u2502 \"accessibilityLabel\": \"$183 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$92 x 2 nights: $183\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":     \u2502\n\u2502 \"903073081726508145\",\\n      \"url\": \"https://www.airbnb.com/rooms/903073081726508145\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTAzMDczMDgxNzI2NTA4MTQ1\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Nanny\u2019s Rustic  \u2502\n\u2502 Retreat: Big Foot Bungalow\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n        \u2502\n\u2502 \"latitude\": 40.15459,\\n            \"longitude\": -79.69988\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n              \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  24 reviews\",\\n      \"structuredDisplayPrice\": {\\n          \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$183 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$92 x 2 nights: $183\"\\n        }\\n      }\\n  \u2502\n\u2502 },\\n    {\\n      \"id\": \"695884438251648673\",\\n      \"url\": \"https://www.airbnb.com/rooms/695884438251648673\",\\n \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6Njk1ODg0NDM4MjUxNjQ4Njcz\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Private Room at \u2502\n\u2502 the Knit Inn (W)\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                  \u2502\n\u2502 \"latitude\": 39.6561,\\n            \"longitude\": -78.9262\\n          }\\n        }\\n      },\\n      \"badges\":      \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\":    \u2502\n\u2502 \"\",\\n        \"primaryLine\": \"2 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.8  \u2502\n\u2502 out of 5 average rating,  30 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$277 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$139 x 2 nights: $277\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"24850770\",\\n      \"url\": \"https://www.airbnb.com/rooms/24850770\",\\n      \"demandStayListing\": {\\n        \"id\": \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MjQ4NTA3NzA=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Edison Room - GAP Trail Hotel at Morguen Toole Co\"\\n          }\\n  \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.814388,\\n                      \u2502\n\u2502 \"longitude\": -79.025269\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n          \u2502\n\u2502 \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.67 out of 5 average rating,  122 \u2502\n\u2502 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$173   \u2502\n\u2502 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n                  \u2502\n\u2502 \"priceDetails\": \"$87 x 2 nights: $173\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"1132497326301272807\",\\n \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/1132497326301272807\",\\n      \"demandStayListing\": {\\n        \"id\":         \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MTEzMjQ5NzMyNjMwMTI3MjgwNw==\",\\n        \"description\": {\\n          \"name\": {\\n        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Highland Haven @ Sleepy Hollow\"\\n          }\\n        },\\n         \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.63978,\\n            \"longitude\":           \u2502\n\u2502 -79.11291\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n                \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"3 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  4 reviews\",\\n         \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$228 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$114 x 2      \u2502\n\u2502 nights: $228\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"1280728160260382893\",\\n      \"url\":              \u2502\n\u2502 \"https://www.airbnb.com/rooms/1280728160260382893\",\\n      \"demandStayListing\": {\\n        \"id\":                \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MTI4MDcyODE2MDI2MDM4Mjg5Mw==\",\\n        \"description\": {\\n          \"name\": {\\n        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Super 8\"\\n          }\\n        },\\n        \"location\": {\\n         \u2502\n\u2502 \"coordinate\": {\\n            \"latitude\": 39.91311439855424,\\n            \"longitude\": -79.75029245143713\\n      \u2502\n\u2502 }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free     \u2502\n\u2502 cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free     \u2502\n\u2502 cancellation\"\\n      },\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                          \u2502\n\u2502 \"accessibilityLabel\": \"$203 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$102 x 2 nights: $203\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"751376184064151185\",\\n      \"url\": \"https://www.airbnb.com/rooms/751376184064151185\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NzUxMzc2MTg0MDY0MTUxMTg1\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Private Bedroom \u2502\n\u2502 in the Knit Inn (Y)\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n               \u2502\n\u2502 \"latitude\": 39.65733,\\n            \"longitude\": -78.92731\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Superhost\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n   \u2502\n\u2502 \"primaryLine\": \"2 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.94 out of 5     \u2502\n\u2502 average rating,  17 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                    \u2502\n\u2502 \"accessibilityLabel\": \"$277 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$139 x 2 nights: $277\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"751362830237380520\",\\n      \"url\": \"https://www.airbnb.com/rooms/751362830237380520\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NzUxMzYyODMwMjM3MzgwNTIw\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"King bedroom at \u2502\n\u2502 the Knit Inn\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                      \u2502\n\u2502 \"latitude\": 39.6558,\\n            \"longitude\": -78.92518\\n          }\\n        }\\n      },\\n      \"badges\":     \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\":    \u2502\n\u2502 \"\",\\n        \"primaryLine\": \"1 bed\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.96  \u2502\n\u2502 out of 5 average rating,  23 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$277 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$139 x 2 nights: $277\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"912472384178866401\",\\n      \"url\": \"https://www.airbnb.com/rooms/912472384178866401\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTEyNDcyMzg0MTc4ODY2NDAx\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Nanny\u2019s Rustic  \u2502\n\u2502 Retreat: Your tent/ my farm\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n       \u2502\n\u2502 \"latitude\": 40.15299,\\n            \"longitude\": -79.6996\\n          }\\n        }\\n      },\\n      \"badges\":     \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n              \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  6 reviews\",\\n      \"structuredDisplayPrice\": {\\n           \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$121 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$63 x 2 nights: $125, Long stay discount:    \u2502\n\u2502 -$4, Price after discount: $121\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"24851215\",\\n      \"url\":      \u2502\n\u2502 \"https://www.airbnb.com/rooms/24851215\",\\n      \"demandStayListing\": {\\n        \"id\":                           \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MjQ4NTEyMTU=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"FOE Taproom - GAP Trail Hotel at Morguen Toole Co\"\\n          }\\n  \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.814388,\\n                      \u2502\n\u2502 \"longitude\": -79.025269\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n          \u2502\n\u2502 \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.69 out of 5 average rating,  77  \u2502\n\u2502 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$258   \u2502\n\u2502 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n                  \u2502\n\u2502 \"priceDetails\": \"$129 x 2 nights: $258\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"880377723329687968\",\\n \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/880377723329687968\",\\n      \"demandStayListing\": {\\n        \"id\":          \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6ODgwMzc3NzIzMzI5Njg3OTY4\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Log Cabin 3\"\\n          }\\n        },\\n        \"location\": {\\n     \u2502\n\u2502 \"coordinate\": {\\n            \"latitude\": 39.76823,\\n            \"longitude\": -79.46899\\n          }\\n           \u2502\n\u2502 }\\n      },\\n      \"badges\": \"Superhost\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free       \u2502\n\u2502 cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free     \u2502\n\u2502 cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.67 out of 5 average rating,  3 reviews\",\\n              \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$211 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$106 x 2      \u2502\n\u2502 nights: $211\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"948847019313497482\",\\n      \"url\":               \u2502\n\u2502 \"https://www.airbnb.com/rooms/948847019313497482\",\\n      \"demandStayListing\": {\\n        \"id\":                 \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6OTQ4ODQ3MDE5MzEzNDk3NDgy\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Nanny\u2019s Rustic Retreat :Casper\u2019s Chalet\"\\n          }\\n            \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.15386,\\n                       \u2502\n\u2502 \"longitude\": -79.69973\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                   \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.89   \u2502\n\u2502 out of 5 average rating,  18 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$183 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$92 x 2 nights: $183\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":     \u2502\n\u2502 \"970495379185696454\",\\n      \"url\": \"https://www.airbnb.com/rooms/970495379185696454\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTcwNDk1Mzc5MTg1Njk2NDU0\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Nanny\u2019s Rustic  \u2502\n\u2502 Retreat: Wagon Wheel Tent Site\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n    \u2502\n\u2502 \"latitude\": 40.15289,\\n            \"longitude\": -79.70061\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Superhost\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n                   \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$112 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$56 x 2       \u2502\n\u2502 nights: $112\"\\n        }\\n      }\\n    }\\n  ],\\n  \"paginationInfo\": {\\n    \"pageCursors\": [\\n                   \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjowLCJ2ZXJzaW9uIjoxfQ==\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\"\\n    ],\\n    \"nextPageCursor\":           \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\"\\n  }\\n}\",\"annotations\":null}             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: airbnb_search\n</pre> <pre>input: {'location': 'Ohiopyle, PA', 'checkin': '2025-05-30', 'checkout': '2025-06-01', 'adults': 2, 'children': 0, \n'infants': 1, 'pets': 1, 'minPrice': 151, 'maxPrice': 300}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 {\"type\":\"text\",\"text\":\"{\\n  \"searchUrl\":                                                                        \u2502\n\u2502 \"https://www.airbnb.com/s/Ohiopyle%2C%20PA/homes?checkin=2025-05-30&amp;checkout=2025-06-01&amp;adults=2&amp;children=0&amp;inf \u2502\n\u2502 ants=1&amp;pets=1&amp;price_min=151&amp;price_max=300\",\\n  \"searchResults\": [\\n    {\\n      \"id\": \"661417855562950090\",\\n   \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/661417855562950090\",\\n      \"demandStayListing\": {\\n        \"id\":          \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NjYxNDE3ODU1NTYyOTUwMDkw\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Pet-friendly Quiet Cabin in the Laurel Highlands\"\\n          }\\n   \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.06686,\\n                       \u2502\n\u2502 \"longitude\": -79.22168\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                   \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"2 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.94 out of 5 average rating,    \u2502\n\u2502 144 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":     \u2502\n\u2502 \"$516 for 2 nights, originally $635\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price       \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$258 x 2 nights: $516, \"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":  \u2502\n\u2502 \"1141244290312390121\",\\n      \"url\": \"https://www.airbnb.com/rooms/1141244290312390121\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTE0MTI0NDI5MDMxMjM5MDEyMQ==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Tall Pines\"\\n   \u2502\n\u2502 }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.8466,\\n             \u2502\n\u2502 \"longitude\": -79.3739\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                    \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.9    \u2502\n\u2502 out of 5 average rating,  20 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$363 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$182 x 2 nights: $363\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"1424817568323644591\",\\n      \"url\": \"https://www.airbnb.com/rooms/1424817568323644591\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTQyNDgxNzU2ODMyMzY0NDU5MQ==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"The Half        \u2502\n\u2502 Glass\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\":      \u2502\n\u2502 40.1221,\\n            \"longitude\": -79.3953\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n   \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"New    \u2502\n\u2502 place to stay\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":   \u2502\n\u2502 \"$396 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n            \u2502\n\u2502 \"priceDetails\": \"$198 x 2 nights: $396\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"43060311\",\\n           \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/43060311\",\\n      \"demandStayListing\": {\\n        \"id\":                    \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDMwNjAzMTE=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Rustic Confluence Cabin with Private Stream.\"\\n          }\\n       \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.81736,\\n                       \u2502\n\u2502 \"longitude\": -79.393\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n     \u2502\n\u2502 \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n          \u2502\n\u2502 \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.64 out of 5 average rating,  104 \u2502\n\u2502 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$365   \u2502\n\u2502 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n                  \u2502\n\u2502 \"priceDetails\": \"$183 x 2 nights: $365\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"548490389500055551\",\\n \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/548490389500055551\",\\n      \"demandStayListing\": {\\n        \"id\":          \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NTQ4NDkwMzg5NTAwMDU1NTUx\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Jones'Inn Confluence\"\\n          }\\n        },\\n                   \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.81134,\\n            \"longitude\":           \u2502\n\u2502 -79.36223\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"5 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.96 out of 5 average rating,  54 reviews\",\\n       \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$508 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$254 x 2      \u2502\n\u2502 nights: $508\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"46254216\",\\n      \"url\":                         \u2502\n\u2502 \"https://www.airbnb.com/rooms/46254216\",\\n      \"demandStayListing\": {\\n        \"id\":                           \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDYyNTQyMTY=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Mountain &amp; Valley Views | Pet Friendly | Fireplace\"\\n          }\\n \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.04978,\\n                       \u2502\n\u2502 \"longitude\": -79.25629\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                   \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.87   \u2502\n\u2502 out of 5 average rating,  83 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$398 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$199 x 2 nights: $398\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"1274094336877328878\",\\n      \"url\": \"https://www.airbnb.com/rooms/1274094336877328878\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTI3NDA5NDMzNjg3NzMyODg3OA==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Escape To       \u2502\n\u2502 Turning Back Log Cabin\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \u2502\n\u2502 \"latitude\": 39.70333814431143,\\n            \"longitude\": -79.25927136332274\\n          }\\n        }\\n      },\\n \u2502\n\u2502 \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n    \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"4.92 out of 5 average rating,  12 reviews\",\\n      \"structuredDisplayPrice\": {\\n         \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$580 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$290 x 2 nights: $580\"\\n        }\\n      }\\n \u2502\n\u2502 },\\n    {\\n      \"id\": \"954991273167112498\",\\n      \"url\": \"https://www.airbnb.com/rooms/954991273167112498\",\\n \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTU0OTkxMjczMTY3MTEyNDk4\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Benner's        \u2502\n\u2502 \\\"Hummingbird House\\\"\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n             \u2502\n\u2502 \"latitude\": 39.8404,\\n            \"longitude\": -79.5644\\n          }\\n        }\\n      },\\n      \"badges\":      \u2502\n\u2502 \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n            \u2502\n\u2502 \"primaryLine\": \"1 double bed\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.85 out of \u2502\n\u2502 5 average rating,  20 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                  \u2502\n\u2502 \"accessibilityLabel\": \"$452 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$226 x 2 nights: $452\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"955165257738075368\",\\n      \"url\": \"https://www.airbnb.com/rooms/955165257738075368\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTU1MTY1MjU3NzM4MDc1MzY4\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Benner's \\\"Hawk \u2502\n\u2502 House\\\"\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\":    \u2502\n\u2502 39.8337,\\n            \"longitude\": -79.5635\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest           \u2502\n\u2502 favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n     \u2502\n\u2502 \"primaryLine\": \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"5.0 out of 5      \u2502\n\u2502 average rating,  11 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                    \u2502\n\u2502 \"accessibilityLabel\": \"$536 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$268 x 2 nights: $536\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"878385731204870228\",\\n      \"url\": \"https://www.airbnb.com/rooms/878385731204870228\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6ODc4Mzg1NzMxMjA0ODcwMjI4\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Log Cabin 8\"\\n  \u2502\n\u2502 }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.76847,\\n            \u2502\n\u2502 \"longitude\": -79.468\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                          \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.5    \u2502\n\u2502 out of 5 average rating,  6 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n            \u2502\n\u2502 \"accessibilityLabel\": \"$314 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$157 x 2 nights: $314\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"1013710155812233643\",\\n      \"url\": \"https://www.airbnb.com/rooms/1013710155812233643\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTAxMzcxMDE1NTgxMjIzMzY0Mw==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Benner's        \u2502\n\u2502 \\\"Pheasant Cabin\\\"\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                \u2502\n\u2502 \"latitude\": 39.8404,\\n            \"longitude\": -79.5644\\n          }\\n        }\\n      },\\n      \"badges\":      \u2502\n\u2502 \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n            \u2502\n\u2502 \"primaryLine\": \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.5 out of 5      \u2502\n\u2502 average rating,  6 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                     \u2502\n\u2502 \"accessibilityLabel\": \"$536 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$268 x 2 nights: $536\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"48678810\",\\n      \"url\": \"https://www.airbnb.com/rooms/48678810\",\\n      \"demandStayListing\": {\\n        \"id\": \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDg2Nzg4MTA=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"The Country Roads' Cottage near Cooper's Rock/WVU\"\\n          }\\n  \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.66631,\\n                       \u2502\n\u2502 \"longitude\": -79.61781\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n   \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"3 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.75 out of 5 average rating,  79 reviews\",\\n       \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$333 for 2 nights,      \u2502\n\u2502 originally $420\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n               \u2502\n\u2502 \"priceDetails\": \"$210 x 2 nights: $420, Special offer: -$87, Price after discount: $333\"\\n        }\\n      }\\n  \u2502\n\u2502 },\\n    {\\n      \"id\": \"10823697\",\\n      \"url\": \"https://www.airbnb.com/rooms/10823697\",\\n                     \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTA4MjM2OTc=\",\\n        \"description\": {\\n       \u2502\n\u2502 \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Broken Tractor Cabins: Rustic and Cozy.\"\\n  \u2502\n\u2502 }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.63458,\\n            \u2502\n\u2502 \"longitude\": -79.55514\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n   \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"4 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.81 out of 5 average rating,  197 reviews\",\\n      \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$365 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$183 x 2      \u2502\n\u2502 nights: $365\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"668093317943857385\",\\n      \"url\":               \u2502\n\u2502 \"https://www.airbnb.com/rooms/668093317943857385\",\\n      \"demandStayListing\": {\\n        \"id\":                 \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NjY4MDkzMzE3OTQzODU3Mzg1\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Cute 30foot camper nestled in the Laurel Highlands\"\\n          }\\n \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.7906,\\n                        \u2502\n\u2502 \"longitude\": -79.5621\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                    \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.81 out of 5 average rating,    \u2502\n\u2502 47 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":      \u2502\n\u2502 \"$304 for 2 nights, originally $340\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price       \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$152 x 2 nights: $304, \"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":  \u2502\n\u2502 \"878385497407880073\",\\n      \"url\": \"https://www.airbnb.com/rooms/878385497407880073\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6ODc4Mzg1NDk3NDA3ODgwMDcz\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Log Cabin 6\"\\n  \u2502\n\u2502 }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.76652,\\n            \u2502\n\u2502 \"longitude\": -79.46796\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                        \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.25   \u2502\n\u2502 out of 5 average rating,  4 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n            \u2502\n\u2502 \"accessibilityLabel\": \"$314 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$157 x 2 nights: $314\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"644290648933852532\",\\n      \"url\": \"https://www.airbnb.com/rooms/644290648933852532\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NjQ0MjkwNjQ4OTMzODUyNTMy\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Riverview       \u2502\n\u2502 Suite\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\":      \u2502\n\u2502 39.6638,\\n            \"longitude\": -79.4066\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest           \u2502\n\u2502 favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n                     \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"4.94 out of 5 average rating,  149 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$446 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$223 x 2 nights: $446\"\\n        }\\n      }\\n \u2502\n\u2502 },\\n    {\\n      \"id\": \"1234855068183659998\",\\n      \"url\":                                                     \u2502\n\u2502 \"https://www.airbnb.com/rooms/1234855068183659998\",\\n      \"demandStayListing\": {\\n        \"id\":                \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MTIzNDg1NTA2ODE4MzY1OTk5OA==\",\\n        \"description\": {\\n          \"name\": {\\n        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Continental Condo at Hidden Valley\"\\n          }\\n        },\\n     \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.05174,\\n            \"longitude\":           \u2502\n\u2502 -79.25627\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n          \u2502\n\u2502 \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.94 out of 5 average rating,  33  \u2502\n\u2502 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$405   \u2502\n\u2502 for 2 nights, originally $459\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n \u2502\n\u2502 \"priceDetails\": \"$203 x 2 nights: $405, \"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":                       \u2502\n\u2502 \"549117545780330524\",\\n      \"url\": \"https://www.airbnb.com/rooms/549117545780330524\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NTQ5MTE3NTQ1NzgwMzMwNTI0\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Need a nest?    \u2502\n\u2502 Nestle in at the HEN HOUSE!\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n       \u2502\n\u2502 \"latitude\": 39.94792,\\n            \"longitude\": -79.19854\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Superhost\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n                   \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"4.76 out of 5 average rating,  49 reviews\",\\n      \"structuredDisplayPrice\": {\\n         \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$599 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$300 x 2 nights: $599\"\\n        }\\n      }\\n \u2502\n\u2502 }\\n  ],\\n  \"paginationInfo\": {\\n    \"pageCursors\": [\\n                                                          \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjowLCJ2ZXJzaW9uIjoxfQ==\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjozNiwidmVyc2lvbiI6MX0=\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0Ijo1NCwidmVyc2lvbiI6MX0=\"\\n    ],\\n    \"nextPageCursor\":           \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\"\\n  }\\n}\",\"annotations\":null}             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: airbnb_search\n</pre> <pre>input: {'location': 'Ohiopyle, PA', 'checkin': '2025-05-30', 'checkout': '2025-06-01', 'adults': 2, 'children': 0, \n'infants': 1, 'pets': 1, 'minPrice': 301}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 {\"type\":\"text\",\"text\":\"{\\n  \"searchUrl\":                                                                        \u2502\n\u2502 \"https://www.airbnb.com/s/Ohiopyle%2C%20PA/homes?checkin=2025-05-30&amp;checkout=2025-06-01&amp;adults=2&amp;children=0&amp;inf \u2502\n\u2502 ants=1&amp;pets=1&amp;price_min=301\",\\n  \"searchResults\": [\\n    {\\n      \"id\": \"847793719180100758\",\\n      \"url\":     \u2502\n\u2502 \"https://www.airbnb.com/rooms/847793719180100758\",\\n      \"demandStayListing\": {\\n        \"id\":                 \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6ODQ3NzkzNzE5MTgwMTAwNzU4\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"KLAE House - nestled among the trees\"\\n          }\\n        },\\n   \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.82369,\\n            \"longitude\":           \u2502\n\u2502 -79.28165\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"3 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.98 out of 5 average rating,  99 reviews\",\\n       \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$708 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$354 x 2      \u2502\n\u2502 nights: $708\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"1365942289098981112\",\\n      \"url\":              \u2502\n\u2502 \"https://www.airbnb.com/rooms/1365942289098981112\",\\n      \"demandStayListing\": {\\n        \"id\":                \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MTM2NTk0MjI4OTA5ODk4MTExMg==\",\\n        \"description\": {\\n          \"name\": {\\n        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Romantic Riverside Getaway! Riverview Hot Tub!\"\\n          }\\n     \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.695286787565834,\\n             \u2502\n\u2502 \"longitude\": -79.13466864620202\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n               \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n      \u2502\n\u2502 \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.82   \u2502\n\u2502 out of 5 average rating,  11 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$928 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$464 x 2 nights: $928\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"47866422\",\\n      \"url\": \"https://www.airbnb.com/rooms/47866422\",\\n      \"demandStayListing\": {\\n        \"id\": \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDc4NjY0MjI=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Luxury Cabin w/ Hot Tub adjacent to 16,000 Acres\"\\n          }\\n   \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.8935,\\n                        \u2502\n\u2502 \"longitude\": -79.56163\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                        \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"4 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.87 out of 5 average rating,    \u2502\n\u2502 39 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":      \u2502\n\u2502 \"$819 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n            \u2502\n\u2502 \"priceDetails\": \"$410 x 2 nights: $819\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"53218067\",\\n           \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/53218067\",\\n      \"demandStayListing\": {\\n        \"id\":                    \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NTMyMTgwNjc=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Mountain Lakeside Fall Paradise Hot Tub, Fire Pit\"\\n          }\\n  \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.91328,\\n                       \u2502\n\u2502 \"longitude\": -79.37375\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                        \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.67 out of 5 average rating,    \u2502\n\u2502 106 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":     \u2502\n\u2502 \"$1,016 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \u2502\n\u2502 \"priceDetails\": \"$508 x 2 nights: $1,016\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"53569111\",\\n         \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/53569111\",\\n      \"demandStayListing\": {\\n        \"id\":                    \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NTM1NjkxMTE=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Bright &amp; Clean Chalet\"\\n          }\\n        },\\n                  \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.0984,\\n            \"longitude\": -79.3878\\n \u2502\n\u2502 }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n                       \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"4 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  101 reviews\",\\n       \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$859 for 2 nights\"\\n    \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$430 x 2      \u2502\n\u2502 nights: $859\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"568972763465162606\",\\n      \"url\":               \u2502\n\u2502 \"https://www.airbnb.com/rooms/568972763465162606\",\\n      \"demandStayListing\": {\\n        \"id\":                 \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NTY4OTcyNzYzNDY1MTYyNjA2\",\\n        \"description\": {\\n          \"name\": {\\n            \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Summer Fun! Pool, Hot Tub, FirePit, Game Room!\"\\n          }\\n     \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.99524,\\n                       \u2502\n\u2502 \"longitude\": -79.44634\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                        \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"4 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.91 out of 5 average rating,    \u2502\n\u2502 74 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":      \u2502\n\u2502 \"$1,066 for 2 nights, originally $1,250\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price   \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$625 x 2 nights: $1,250, Special offer: -$184, Price after discount:      \u2502\n\u2502 $1,066\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"46827304\",\\n      \"url\":                               \u2502\n\u2502 \"https://www.airbnb.com/rooms/46827304\",\\n      \"demandStayListing\": {\\n        \"id\":                           \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDY4MjczMDQ=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Uber Private, Luxury Cabin minutes from Ohiopyle\"\\n          }\\n   \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.83243,\\n                       \u2502\n\u2502 \"longitude\": -79.63453\\n          }\\n        }\\n      },\\n      \"badges\": \"Superhost\",\\n                        \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"3 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.92 out of 5 average rating,    \u2502\n\u2502 37 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":      \u2502\n\u2502 \"$631 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n            \u2502\n\u2502 \"priceDetails\": \"$316 x 2 nights: $631\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"23433189\",\\n           \u2502\n\u2502 \"url\": \"https://www.airbnb.com/rooms/23433189\",\\n      \"demandStayListing\": {\\n        \"id\":                    \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6MjM0MzMxODk=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"4BR Seven Springs Cabin + BIG Hot Tub\"\\n          }\\n        },\\n  \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.07499,\\n            \"longitude\":           \u2502\n\u2502 -79.35085\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n                \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"7 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.66 out of 5 average rating,  178 reviews\",\\n      \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$679 for 2 nights,      \u2502\n\u2502 originally $1,162\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n             \u2502\n\u2502 \"priceDetails\": \"$581 x 2 nights: $1,162, Special offer: -$483, Price after discount: $679\"\\n        }\\n        \u2502\n\u2502 }\\n    },\\n    {\\n      \"id\": \"5481479\",\\n      \"url\": \"https://www.airbnb.com/rooms/5481479\",\\n                \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NTQ4MTQ3OQ==\",\\n        \"description\": {\\n       \u2502\n\u2502 \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"In the \u2764 of Ohiopyle. Large yard with       \u2502\n\u2502 firepit\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\":    \u2502\n\u2502 39.86934,\\n            \"longitude\": -79.49007\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest         \u2502\n\u2502 favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n     \u2502\n\u2502 \"primaryLine\": \"4 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.91 out of 5     \u2502\n\u2502 average rating,  266 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                   \u2502\n\u2502 \"accessibilityLabel\": \"$816 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$408 x 2 nights: $816\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"1294182529824847255\",\\n      \"url\": \"https://www.airbnb.com/rooms/1294182529824847255\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTI5NDE4MjUyOTgyNDg0NzI1NQ==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Ohiopyle,       \u2502\n\u2502 Sleeps 14 / 8 Bed, 4BR, FirePit, HotTub\"\\n          }\\n        },\\n        \"location\": {\\n                      \u2502\n\u2502 \"coordinate\": {\\n            \"latitude\": 39.8716,\\n            \"longitude\": -79.5448\\n          }\\n        }\\n  \u2502\n\u2502 },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n           \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"8 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n              \u2502\n\u2502 \"avgRatingA11yLabel\": \"5.0 out of 5 average rating,  6 reviews\",\\n      \"structuredDisplayPrice\": {\\n           \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$1,107 for 2 nights, originally $1,283\"\\n        },\\n        \u2502\n\u2502 \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$642 x 2 nights: $1,283,  \u2502\n\u2502 Special offer: -$176, Price after discount: $1,107\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":             \u2502\n\u2502 \"917065370474534078\",\\n      \"url\": \"https://www.airbnb.com/rooms/917065370474534078\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6OTE3MDY1MzcwNDc0NTM0MDc4\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"ADventure       \u2502\n\u2502 Lodge\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\":      \u2502\n\u2502 39.8099,\\n            \"longitude\": -79.3557\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest           \u2502\n\u2502 favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n     \u2502\n\u2502 \"primaryLine\": \"4 queen beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.93 out of \u2502\n\u2502 5 average rating,  61 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                  \u2502\n\u2502 \"accessibilityLabel\": \"$628 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$314 x 2 nights: $628\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"847241807980593269\",\\n      \"url\": \"https://www.airbnb.com/rooms/847241807980593269\",\\n                        \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6ODQ3MjQxODA3OTgwNTkzMjY5\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Bern's Summit   \u2502\n\u2502 Solitude: Stream-Front Serenity\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n   \u2502\n\u2502 \"latitude\": 39.76251,\\n            \"longitude\": -79.43551\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"Free cancellation\",\\n              \u2502\n\u2502 \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n        \"secondaryLine\": \"Free cancellation\"\\n      },\\n   \u2502\n\u2502 \"avgRatingA11yLabel\": \"4.9 out of 5 average rating,  49 reviews\",\\n      \"structuredDisplayPrice\": {\\n          \u2502\n\u2502 \"primaryLine\": {\\n          \"accessibilityLabel\": \"$645 for 2 nights\"\\n        },\\n        \"explanationData\":   \u2502\n\u2502 {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$323 x 2 nights: $645\"\\n        }\\n      }\\n \u2502\n\u2502 },\\n    {\\n      \"id\": \"33338656\",\\n      \"url\": \"https://www.airbnb.com/rooms/33338656\",\\n                     \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MzMzMzg2NTY=\",\\n        \"description\": {\\n       \u2502\n\u2502 \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Stony Creek | 5BR, 3.5BA, Hot Tub,          \u2502\n\u2502 Creekside Cabin\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n                   \u2502\n\u2502 \"latitude\": 39.77173,\\n            \"longitude\": -79.59944\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n            \u2502\n\u2502 \"primaryLine\": \"7 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.89 out of 5     \u2502\n\u2502 average rating,  55 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n                    \u2502\n\u2502 \"accessibilityLabel\": \"$991 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$496 x 2 nights: $991\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"43970203\",\\n      \"url\": \"https://www.airbnb.com/rooms/43970203\",\\n      \"demandStayListing\": {\\n        \"id\": \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NDM5NzAyMDM=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Pool, Hot Tub, Pavilion, FirePit 6mi to Ohiopyle\"\\n          }\\n   \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.9506,\\n                        \u2502\n\u2502 \"longitude\": -79.45431\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n                   \u2502\n\u2502 \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \u2502\n\u2502 \"7 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.87 out of 5 average rating,    \u2502\n\u2502 70 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\":      \u2502\n\u2502 \"$1,481 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \u2502\n\u2502 \"priceDetails\": \"$741 x 2 nights: $1,481\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":                       \u2502\n\u2502 \"1210731658825222578\",\\n      \"url\": \"https://www.airbnb.com/rooms/1210731658825222578\",\\n                      \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6MTIxMDczMTY1ODgyNTIyMjU3OA==\",\\n                 \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Sleeps 13, 4BR, \u2502\n\u2502 8BED, HotTub, Pond, Hidden Valley\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n \u2502\n\u2502 \"latitude\": 40.0877,\\n            \"longitude\": -79.2259\\n          }\\n        }\\n      },\\n      \"badges\":      \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\":    \u2502\n\u2502 \"\",\\n        \"primaryLine\": \"8 beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"5.0  \u2502\n\u2502 out of 5 average rating,  36 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n           \u2502\n\u2502 \"accessibilityLabel\": \"$1,258 for 2 nights, originally $1,677\"\\n        },\\n        \"explanationData\": {\\n      \u2502\n\u2502 \"title\": \"Price details\",\\n          \"priceDetails\": \"$839 x 2 nights: $1,677, Special offer: -$419, Price      \u2502\n\u2502 after discount: $1,258\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\": \"8207436\",\\n      \"url\":                \u2502\n\u2502 \"https://www.airbnb.com/rooms/8207436\",\\n      \"demandStayListing\": {\\n        \"id\":                            \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6ODIwNzQzNg==\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Smiling Mountain Lodge\"\\n          }\\n        },\\n                 \u2502\n\u2502 \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 40.04243,\\n            \"longitude\":           \u2502\n\u2502 -79.34564\\n          }\\n        }\\n      },\\n      \"badges\": \"Guest favorite\",\\n      \"structuredContent\": {\\n  \u2502\n\u2502 \"mapCategoryInfo\": \"Free cancellation\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"\",\\n          \u2502\n\u2502 \"secondaryLine\": \"Free cancellation\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.83 out of 5 average rating,  189 \u2502\n\u2502 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$1,082 \u2502\n\u2502 for 2 nights, originally $1,482\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price           \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$541 x 2 nights: $1,082, \"\\n        }\\n      }\\n    },\\n    {\\n           \u2502\n\u2502 \"id\": \"637856009387316779\",\\n      \"url\": \"https://www.airbnb.com/rooms/637856009387316779\",\\n                  \u2502\n\u2502 \"demandStayListing\": {\\n        \"id\": \"RGVtYW5kU3RheUxpc3Rpbmc6NjM3ODU2MDA5Mzg3MzE2Nzc5\",\\n                     \u2502\n\u2502 \"description\": {\\n          \"name\": {\\n            \"localizedStringWithTranslationPreference\": \"Snowmobile      \u2502\n\u2502 riding at its finest\"\\n          }\\n        },\\n        \"location\": {\\n          \"coordinate\": {\\n              \u2502\n\u2502 \"latitude\": 39.93658,\\n            \"longitude\": -79.43684\\n          }\\n        }\\n      },\\n      \"badges\":    \u2502\n\u2502 \"Guest favorite\",\\n      \"structuredContent\": {\\n        \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\":    \u2502\n\u2502 \"\",\\n        \"primaryLine\": \"3 queen beds\",\\n        \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \u2502\n\u2502 \"5.0 out of 5 average rating,  33 reviews\",\\n      \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n      \u2502\n\u2502 \"accessibilityLabel\": \"$969 for 2 nights\"\\n        },\\n        \"explanationData\": {\\n          \"title\": \"Price  \u2502\n\u2502 details\",\\n          \"priceDetails\": \"$485 x 2 nights: $969\"\\n        }\\n      }\\n    },\\n    {\\n      \"id\":    \u2502\n\u2502 \"50635235\",\\n      \"url\": \"https://www.airbnb.com/rooms/50635235\",\\n      \"demandStayListing\": {\\n        \"id\": \u2502\n\u2502 \"RGVtYW5kU3RheUxpc3Rpbmc6NTA2MzUyMzU=\",\\n        \"description\": {\\n          \"name\": {\\n                        \u2502\n\u2502 \"localizedStringWithTranslationPreference\": \"Marietta's River Retreat | 3BR,2BA,in Ohiopyle!\"\\n          }\\n    \u2502\n\u2502 },\\n        \"location\": {\\n          \"coordinate\": {\\n            \"latitude\": 39.8672,\\n                        \u2502\n\u2502 \"longitude\": -79.49218\\n          }\\n        }\\n      },\\n      \"badges\": \"\",\\n      \"structuredContent\": {\\n   \u2502\n\u2502 \"mapCategoryInfo\": \"\",\\n        \"mapSecondaryLine\": \"\",\\n        \"primaryLine\": \"5 beds\",\\n                     \u2502\n\u2502 \"secondaryLine\": \"\"\\n      },\\n      \"avgRatingA11yLabel\": \"4.75 out of 5 average rating,  55 reviews\",\\n       \u2502\n\u2502 \"structuredDisplayPrice\": {\\n        \"primaryLine\": {\\n          \"accessibilityLabel\": \"$1,321 for 2 nights\"\\n  \u2502\n\u2502 },\\n        \"explanationData\": {\\n          \"title\": \"Price details\",\\n          \"priceDetails\": \"$661 x 2      \u2502\n\u2502 nights: $1,321\"\\n        }\\n      }\\n    }\\n  ],\\n  \"paginationInfo\": {\\n    \"pageCursors\": [\\n                 \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjowLCJ2ZXJzaW9uIjoxfQ==\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjozNiwidmVyc2lvbiI6MX0=\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0Ijo1NCwidmVyc2lvbiI6MX0=\",\\n                                       \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0Ijo3MiwidmVyc2lvbiI6MX0=\"\\n    ],\\n    \"nextPageCursor\":           \u2502\n\u2502 \"eyJzZWN0aW9uX29mZnNldCI6MCwiaXRlbXNfb2Zmc2V0IjoxOCwidmVyc2lvbiI6MX0=\"\\n  }\\n}\",\"annotations\":null}             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 LLM \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 I've found a range of woodsy Airbnb cabins near Ohiopyle, PA for your stay from May 30 to June 1, 2025,         \u2502\n\u2502 suitable for 2 adults, 1 infant, and 1 dog. Here are some options categorized by budget:                        \u2502\n\u2502                                                                                                                 \u2502\n\u2502 Budget up to $150 for 2 nights:                                                                                 \u2502\n\u2502                                                                                                                 \u2502\n\u2502  \u2022 Log Cabin 5 (Guest favorite, $211) Link                                                                      \u2502\n\u2502  \u2022 Glamping Pod (Guest favorite, $274) Link                                                                     \u2502\n\u2502  \u2022 Valley View Sunrise Site @TheGreat48Escape (Guest favorite, $74) Link                                        \u2502\n\u2502  \u2022 Nanny\u2019s Rustic Retreat: Lil\u2019 Red\u2019s Nest (Superhost, $160) Link                                               \u2502\n\u2502                                                                                                                 \u2502\n\u2502 Moderate budget $151 - $300 for 2 nights:                                                                       \u2502\n\u2502                                                                                                                 \u2502\n\u2502  \u2022 Pet-friendly Quiet Cabin in the Laurel Highlands (Guest favorite, $516) Link                                 \u2502\n\u2502  \u2022 Tall Pines (Guest favorite, $363) Link                                                                       \u2502\n\u2502  \u2022 Rustic Confluence Cabin with Private Stream (Rating 4.64, $365) Link                                         \u2502\n\u2502  \u2022 Log Cabin 8 (Superhost, $314) Link                                                                           \u2502\n\u2502                                                                                                                 \u2502\n\u2502 Higher budget over $300 for 2 nights:                                                                           \u2502\n\u2502                                                                                                                 \u2502\n\u2502  \u2022 KLAE House - nestled among the trees (Guest favorite, $708) Link                                             \u2502\n\u2502  \u2022 Romantic Riverside Getaway! Riverview Hot Tub! (Superhost, $928) Link                                        \u2502\n\u2502  \u2022 Luxury Cabin w/ Hot Tub adjacent to 16,000 Acres (Superhost, $819) Link                                      \u2502\n\u2502  \u2022 Bright &amp; Clean Chalet (Guest favorite, $859) Link                                                            \u2502\n\u2502                                                                                                                 \u2502\n\u2502 Do any of these options catch your eye? Or would you like more options or details on any specific ones? Also,   \u2502\n\u2502 do you have any additional preferences like number of beds, specific amenities, or proximity to certain sites?  \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <p>The <code>agent.run</code> method returns an AgentTrace object, which has a few convenient attributes for displaying some interesting information about the run.</p> In\u00a0[5]: Copied! <pre>print(agent_trace.final_output)  # Final answer\nprint(f\"Duration: {agent_trace.duration.total_seconds():.2f} seconds\")\nprint(f\"Usage: {agent_trace.usage}\")\nprint(f\"Cost (USD): {agent_trace.cost.total_cost:.6f}\")\n</pre> print(agent_trace.final_output)  # Final answer print(f\"Duration: {agent_trace.duration.total_seconds():.2f} seconds\") print(f\"Usage: {agent_trace.usage}\") print(f\"Cost (USD): {agent_trace.cost.total_cost:.6f}\") <pre>I've found a range of woodsy Airbnb cabins near Ohiopyle, PA for your stay from May 30 to June 1, 2025, suitable for 2 adults, 1 infant, and 1 dog. Here are some options categorized by budget:\n\nBudget up to $150 for 2 nights:\n- Log Cabin 5 (Guest favorite, $211) [Link](https://www.airbnb.com/rooms/878385397115028668)\n- Glamping Pod (Guest favorite, $274) [Link](https://www.airbnb.com/rooms/1224643624417572953)\n- Valley View Sunrise Site @TheGreat48Escape (Guest favorite, $74) [Link](https://www.airbnb.com/rooms/658658760148288301)\n- Nanny\u2019s Rustic Retreat: Lil\u2019 Red\u2019s Nest (Superhost, $160) [Link](https://www.airbnb.com/rooms/955289529577335421)\n\nModerate budget $151 - $300 for 2 nights:\n- Pet-friendly Quiet Cabin in the Laurel Highlands (Guest favorite, $516) [Link](https://www.airbnb.com/rooms/661417855562950090)\n- Tall Pines (Guest favorite, $363) [Link](https://www.airbnb.com/rooms/1141244290312390121)\n- Rustic Confluence Cabin with Private Stream (Rating 4.64, $365) [Link](https://www.airbnb.com/rooms/43060311)\n- Log Cabin 8 (Superhost, $314) [Link](https://www.airbnb.com/rooms/878385731204870228)\n\nHigher budget over $300 for 2 nights:\n- KLAE House - nestled among the trees (Guest favorite, $708) [Link](https://www.airbnb.com/rooms/847793719180100758)\n- Romantic Riverside Getaway! Riverview Hot Tub! (Superhost, $928) [Link](https://www.airbnb.com/rooms/1365942289098981112)\n- Luxury Cabin w/ Hot Tub adjacent to 16,000 Acres (Superhost, $819) [Link](https://www.airbnb.com/rooms/47866422)\n- Bright &amp; Clean Chalet (Guest favorite, $859) [Link](https://www.airbnb.com/rooms/53569111)\n\nDo any of these options catch your eye? Or would you like more options or details on any specific ones? Also, do you have any additional preferences like number of beds, specific amenities, or proximity to certain sites?\nDuration: 109.33 seconds\nUsage: total_token_count_prompt=22071 total_token_count_completion=937 total_tokens=23008\nCost (USD): 0.008828\n</pre>"},{"location":"cookbook/mcp_agent/#creating-an-agent-with-mcp","title":"Creating an agent with MCP\u00b6","text":"<p>The Model Context Protocol (MCP) introduced by Anthropic has proven to be a popular method for providing an AI agent with access to a variety of tools. This Huggingface blog post  has a nice explanation of MCP.  In this tutorial, we'll build an agent that is able to leverage MCP server provided tools.</p> <p>Note: because this tutorial relies upon advanced stdio/stderr communication using the MCP Server, it cannot be run on Google Colab.</p>"},{"location":"cookbook/mcp_agent/#install-dependencies","title":"Install Dependencies\u00b6","text":"<p>any-agent uses the python asyncio module to support async functionality. When running in Jupyter notebooks, this means we need to enable the use of nested event loops. We'll install any-agent and enable this below using nest_asyncio.</p>"},{"location":"cookbook/mcp_agent/#configure-the-agent","title":"Configure the Agent\u00b6","text":"<p>Now it's time to configure the agent! At this stage you have a few choices:</p>"},{"location":"cookbook/mcp_agent/#pick-the-framework","title":"Pick the framework\u00b6","text":"<p>We support a variety of underlying agent frameworks (OpenAI, Smolagents, Langchain, etc), which all have their own particular agentic AI implementations. For this tutorial's simple use case, any of the frameworks should work just fine, but any-agent makes it easy to try out a different framework later, if we so choose. For this example, we will use the \"openai\" agent framework.</p>"},{"location":"cookbook/mcp_agent/#pick-an-llm","title":"Pick an LLM\u00b6","text":"<p>Regardless of which agent framework you choose, each framework supports LiteLLM, which is a proxy that allows us to use whichever LLM inside the framework, hosted on by any provider. For example, we could use a local model via llama.cpp or llamafile, a google hosted gemini model, or a AWS bedrock hosted Llama model. For this example, let's use OpenAI's gpt-4.1-mini.</p>"},{"location":"cookbook/mcp_agent/#pick-which-tools-to-use","title":"Pick which tools to use\u00b6","text":"<p>In this example, we'll add a few MCP servers that we host locally, which means we'll use a Stdio MCP server. If an MCP Server is already running and hosted elsewhere, you can use an SSE connection to access it. You can browse some of the officially supported MCP servers here.</p> <p>Lets give use two MCP servers:</p> <ul> <li>Time: so the agent can know what time/day it is.</li> <li>Airbnb: so the agent can browse airbnb listings</li> </ul> <p>I will also add a custom send_message tool, that way it can ask us additional questions before getting its final answer!</p>"},{"location":"cookbook/mcp_agent/#run-the-agent","title":"Run the Agent\u00b6","text":"<p>Now we've configured our agent, so it's time to run it! Since it has access to airbnb listings as well as the current time, it's a perfect fit for helping me find a nice airbnb for the weekend.</p>"},{"location":"cookbook/mcp_agent/#view-the-results","title":"View the results\u00b6","text":""},{"location":"cookbook/your_first_agent/","title":"Creating your first agent","text":"In\u00a0[\u00a0]: Copied! <pre>%pip install 'any-agent[all]'\n\nimport nest_asyncio\n\nnest_asyncio.apply()\n</pre> %pip install 'any-agent[all]'  import nest_asyncio  nest_asyncio.apply() In\u00a0[8]: Copied! <pre>import os\nfrom getpass import getpass\n\nif \"OPENAI_API_KEY\" not in os.environ:\n    print(\"OPENAI_API_KEY not found in environment!\")\n    api_key = getpass(\"Please enter your OPENAI_API_KEY: \")\n    os.environ[\"OPENAI_API_KEY\"] = api_key\n    print(\"OPENAI_API_KEY set for this session!\")\nelse:\n    print(\"OPENAI_API_KEY found in environment.\")\n</pre> import os from getpass import getpass  if \"OPENAI_API_KEY\" not in os.environ:     print(\"OPENAI_API_KEY not found in environment!\")     api_key = getpass(\"Please enter your OPENAI_API_KEY: \")     os.environ[\"OPENAI_API_KEY\"] = api_key     print(\"OPENAI_API_KEY set for this session!\") else:     print(\"OPENAI_API_KEY found in environment.\") <pre>OPENAI_API_KEY found in environment.\n</pre> In\u00a0[\u00a0]: Copied! <pre>from any_agent import AgentConfig, AnyAgent\nfrom any_agent.tools import search_web, visit_webpage\n\nagent = AnyAgent.create(\n    \"openai\",  # See all options in https://mozilla-ai.github.io/any-agent/\n    AgentConfig(model_id=\"gpt-4.1-nano\", tools=[search_web, visit_webpage]),\n)\n</pre> from any_agent import AgentConfig, AnyAgent from any_agent.tools import search_web, visit_webpage  agent = AnyAgent.create(     \"openai\",  # See all options in https://mozilla-ai.github.io/any-agent/     AgentConfig(model_id=\"gpt-4.1-nano\", tools=[search_web, visit_webpage]), ) In\u00a0[3]: Copied! <pre>agent_trace = agent.run(\"What are 5 tv shows that are trending in 2025?\")\n</pre> agent_trace = agent.run(\"What are 5 tv shows that are trending in 2025?\") <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: search_web\n</pre> <pre>input: {'query': 'Trending TV shows in 2025'}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Best TV Shows of 2025: New Series to Watch Now - Rotten Tomatoes The latest: May kicks off with Poker Face:     \u2502\n\u2502 Season 2, #1 Happy Family USA: Season 1, North of North: Season 1, The Four Seasons: Season 1, and Doctor Who:  \u2502\n\u2502 Season 2. You: Season 5, \u00c9toile: Season 1, and The Narrow Road to the Deep North close out the month. Andor     \u2502\n\u2502 sticks the landing with a Certified Fresh Season 2. The Wheel of Time continues to grow in stature, now with    \u2502\n\u2502 Season 3 the series ... 2025 TV Shows: Release Dates For Most Anticipated Series - Deadline 36 Of The Most      \u2502\n\u2502 Anticipated New &amp; Returning TV Shows Of 2025. By Dessi Gomez. Dessi Gomez. ... some long-anticipated returning  \u2502\n\u2502 shows have new seasons arriving in 2025, ... Trending on Deadline 23 Best Streaming and TV Shows to See in 2025 \u2502\n\u2502 - Time Out These are the 23 must-see TV shows for 2025 you can't miss. A new 'White Lotus', the end of          \u2502\n\u2502 'Stranger Things', and a knockout boxing drama. Monday 6 January 2025. Share. Copy Link. 87 TV Series You Must  \u2502\n\u2502 See In 2025 (And Where To Stream Them) From Andor to Zero Day, and The Last Of Us to Stranger Things, Empire    \u2502\n\u2502 presents your guide to the biggest shows streaming in 2025. Read the full list. The 41 Most Anticipated New and \u2502\n\u2502 Returning TV Shows Coming in 2025 - Variety The show was also revived for one season at HGTV in 2020 with host  \u2502\n\u2502 Jesse Tyler Ferguson. The new series, produced by Endemol Shine North America and Hello Sunshine, will feature  \u2502\n\u2502 the hosts meeting ... The 31 Most Anticipated Scripted TV Shows of 2025 - The Hollywood Reporter The            \u2502\n\u2502 after-effects of media conglomerate cost-cutting and 2023's labor strikes showed up in noticeable ways for TV   \u2502\n\u2502 viewers last year. Networks and streamers made fewer shows \u2014 the Peak TV era ... The 50 big new TV shows to     \u2502\n\u2502 watch in 2025 | Polygon The 50 most exciting TV shows for your 2025 watch list. The year is full of             \u2502\n\u2502 long-awaited returns and exciting new premieres. by Austen Goslin and Polygon Staff. Jan 1, 2025, 2:00 PM UTC   \u2502\n\u2502 All the New TV Shows to Look Forward to in 2025, List of ... - TVLine TVLine presents a comprehensive list of   \u2502\n\u2502 every new TV show premiering across broadcast, cable and streaming in 2025. ... Trending Shows. 9-1-1; 1923;    \u2502\n\u2502 ... And that's only the first two months of ... new shows/series to watch - 2025 - IMDb With an exciting lineup \u2502\n\u2502 of fresh stories, compelling characters, and intriguing concepts, this list is dedicated to the latest          \u2502\n\u2502 must-watch series of 2025. Covering a mix of gripping crime dramas, heartfelt family narratives, thrilling      \u2502\n\u2502 procedural spin offs, and nostalgic revivals, these new releases bring something for every type of viewer.      \u2502\n\u2502 Whether it's a fast paced action series, an emotionally ... The 10 Best TV Shows of 2025 to Put on Your         \u2502\n\u2502 Must-Watch List Get Reader's Digest's Read Up newsletter for more TV shows, movies, humor, travel, tech and fun \u2502\n\u2502 facts all week long. Via Tv.apple.com. Severance . Premiere date: Jan. 17. Where to watch: Apple TV+            \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 TOOL \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>tool_name: search_web\n</pre> <pre>input: {'query': 'Top TV shows of 2025'}\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Best TV Shows of 2025: New Series to Watch Now - Rotten Tomatoes The latest: May kicks off with Poker Face:     \u2502\n\u2502 Season 2, #1 Happy Family USA: Season 1, North of North: Season 1, The Four Seasons: Season 1, and Doctor Who:  \u2502\n\u2502 Season 2. You: Season 5, \u00c9toile: Season 1, and The Narrow Road to the Deep North close out the month. Andor     \u2502\n\u2502 sticks the landing with a Certified Fresh Season 2. The Wheel of Time continues to grow in stature, now with    \u2502\n\u2502 Season 3 the series ... 23 Best Streaming and TV Shows to See in 2025 - Time Out Netflix blew the cobwebs off   \u2502\n\u2502 The Addams Family property in 2022, turning it into a gothy YA mystery series focused on the franchise's best   \u2502\n\u2502 character, and scored a massive hit. Season 2 won't ... The 36 Most Anticipated TV Shows of Summer 2025 | TIME  \u2502\n\u2502 Alexander Skarsg\u00e5rd stars as the content-loving humanoid, and is supported by a cast of dramedy heavy-hitters   \u2502\n\u2502 like David Dastmalchian, Noma Dumezweni, Sabrina Wu, John Cho and Jack McBrayer ... The 10 Best TV Shows of     \u2502\n\u2502 2025 to Put on Your Must-Watch List Find out the buzziest TV shows of 2025, from Severance to Yellowjackets,    \u2502\n\u2502 and when and where to watch them. Reader's Digest rounds up the year's must-see TV shows, along with spoilers,  \u2502\n\u2502 cast and trailers. 87 TV Series You Must See In 2025 (And Where To Stream Them) A comprehensive list of the     \u2502\n\u2502 best TV shows coming out in 2025, from Severance to Stranger Things, with streaming platforms and release       \u2502\n\u2502 dates. Find out what to watch in the next 11 months of TV, from returning favourites to new originals. The Best \u2502\n\u2502 TV Shows of 2025, So Far - Vanity Fair We're only three months into 2025, but this young year is already        \u2502\n\u2502 chock-full of incredible television. The best TV shows of 2025 (so far) can be found on streaming, premium      \u2502\n\u2502 cable, and even (even ... The Most Anticipated TV Shows of 2025 (/2026) - IMDb List your movie, TV &amp; celebrity  \u2502\n\u2502 picks. An architect works to build up the 1893 World's Fair, while the serial killer H. H. Holmes uses the fair \u2502\n\u2502 to attract and kill women ... The Best TV Shows and New Series of 2025 (So Far) - Vulture From ballet comedy to \u2502\n\u2502 Star Wars prequel, from social experiment to war drama, Vulture reviews the standout series of 2025. See the    \u2502\n\u2502 list of six shows and their premises, critics' opinions, and links to more coverage. The 31 Most Anticipated    \u2502\n\u2502 Scripted TV Shows of 2025 - The Hollywood Reporter The 31 Most Anticipated Scripted TV Shows of 2025            \u2502\n\u2502 Long-delayed returning favorites and several intriguing new titles are on tap for the coming year. By Rick      \u2502\n\u2502 Porter , Nicole Fell , James Hibberd ... The Best TV Shows of 2025: Release Dates and Trailers - Esquire You    \u2502\n\u2502 have less time to wait than you think. These are the best TV shows of 2025. The Traitors. The first season of   \u2502\n\u2502 Claudia Winkleman's ultra-camp pressure cooker of suspicion, alliance building ...                              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 LLM \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <pre>\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Output \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Here are 5 trending TV shows in 2025:                                                                           \u2502\n\u2502                                                                                                                 \u2502\n\u2502  1 Poker Face: Season 2 - A new season of the popular mystery series.                                           \u2502\n\u2502  2 Happy Family USA: Season 1 - A family-centered comedy-drama.                                                 \u2502\n\u2502  3 North of North: Season 1 - An intriguing new series with a focus on northern territories.                    \u2502\n\u2502  4 The Four Seasons: Season 1 - A show exploring stories across different seasons.                              \u2502\n\u2502  5 Doctor Who: Season 2 - The latest season of the iconic sci-fi series.                                        \u2502\n\u2502                                                                                                                 \u2502\n\u2502 Would you like more details about any of these shows?                                                           \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</pre> <pre>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</pre> <p>The <code>agent.run</code> method returns an AgentTrace object, which has a few convenient attributes for displaying some interesting information about the run.</p> In\u00a0[7]: Copied! <pre>print(agent_trace.final_output)  # Final answer\nprint(f\"Duration: {agent_trace.duration.total_seconds():.2f} seconds\")\nprint(f\"Usage: {agent_trace.usage}\")\nprint(f\"Cost (USD): {agent_trace.cost.total_cost:.6f}\")\n</pre> print(agent_trace.final_output)  # Final answer print(f\"Duration: {agent_trace.duration.total_seconds():.2f} seconds\") print(f\"Usage: {agent_trace.usage}\") print(f\"Cost (USD): {agent_trace.cost.total_cost:.6f}\") <pre>Here are 5 trending TV shows in 2025:\n\n1. **Poker Face: Season 2** - A new season of the popular mystery series.\n2. **Happy Family USA: Season 1** - A family-centered comedy-drama.\n3. **North of North: Season 1** - An intriguing new series with a focus on northern territories.\n4. **The Four Seasons: Season 1** - A show exploring stories across different seasons.\n5. **Doctor Who: Season 2** - The latest season of the iconic sci-fi series.\n\nWould you like more details about any of these shows?\nDuration: 5.87 seconds\nUsage: total_token_count_prompt=2267 total_token_count_completion=183 total_tokens=2450\nCost (USD): 0.000227\n</pre>"},{"location":"cookbook/your_first_agent/#creating-your-first-agent","title":"Creating your first agent\u00b6","text":"<p>If you're looking to build your first agent using a few simple tools, this is a great place to start. In this cookbook example, we will create and run a simple agent that has access to a few web tools. This can be easily expanded to add more advanced tools and features. \ud83d\ude80</p>"},{"location":"cookbook/your_first_agent/#install-dependencies","title":"Install Dependencies\u00b6","text":"<p>any-agent uses the python asyncio module to support async functionality. When running in Jupyter notebooks, this means we need to enable the use of nested event loops. We'll install any-agent and enable this below using nest_asyncio.</p>"},{"location":"cookbook/your_first_agent/#configure-the-agent","title":"Configure the Agent\u00b6","text":"<p>Now it's time to configure the agent! At this stage you have a few choices:</p>"},{"location":"cookbook/your_first_agent/#pick-the-framework","title":"Pick the framework\u00b6","text":"<p>We support a variety of underlying agent frameworks (OpenAI, Smolagents, Langchain, etc), which all have their own particular agentic AI implementations. For this tutorial's simple use case, any of the frameworks should work just fine, but any-agent makes it easy to try out a different framework later, if we so choose. For this example, we will use the \"openai\" agent framework.</p>"},{"location":"cookbook/your_first_agent/#pick-an-llm","title":"Pick an LLM\u00b6","text":"<p>Regardless of which agent framework you choose, each framework supports LiteLLM, which is a proxy that allows us to use whichever LLM inside the framework, hosted on by any provider. For example, we could use a local model via llama.cpp or llamafile, a google hosted gemini model, or a AWS bedrock hosted Llama model. For this example, let's use OpenAI's gpt-4.1-nano.</p>"},{"location":"cookbook/your_first_agent/#pick-which-tools-to-use","title":"Pick which tools to use\u00b6","text":"<p>In this tutorial, we will provide the agent with access to web searches and web page visits. In later examples we will show more advanced tool usage like Model Context Protocol (MCP) tool use or inter-agent communication using Agent-2-Agent (A2A).</p>"},{"location":"cookbook/your_first_agent/#run-the-agent","title":"Run the Agent\u00b6","text":"<p>Now we've configured our agent, so it's time to run it! Let's give it a simple task: find 5 trending new TV shows that were released recently.</p>"},{"location":"cookbook/your_first_agent/#view-the-results","title":"View the results\u00b6","text":""},{"location":"frameworks/agno/","title":"Agno","text":"<p>https://github.com/agno-agi/agno</p>"},{"location":"frameworks/agno/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>agno.agent.Agent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/agno/#default-model-type","title":"Default Model Type","text":"<p>We use <code>agno.models.litellm.LiteLLM</code> as default. Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/agno/#examples","title":"Examples","text":""},{"location":"frameworks/agno/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, visit_webpage\n\nagent = AnyAgent.create(\n    \"agno\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    ),\n    agent_args={\n        \"tool_call_limit\": 3\n    }\n)\nagent.run(\"Which Agent Framework is the best??\")\n</code></pre>"},{"location":"frameworks/google_adk/","title":"Google Agent Development Kit (ADK)","text":"<p>https://github.com/google/adk-python</p>"},{"location":"frameworks/google_adk/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>google.adk.agents.llm_agent.LlmAgent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/google_adk/#default-model-type","title":"Default Model Type","text":"<p>We use <code>google.adk.models.lite_llm.LiteLLM</code> as default. Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/google_adk/#run-args","title":"Run args","text":"<p>Check <code>RunConfig</code> to find additional supported <code>AnyAgent.run</code> args.</p>"},{"location":"frameworks/google_adk/#examples","title":"Examples","text":""},{"location":"frameworks/google_adk/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, visit_webpage\nfrom google.adk.agents.run_config import RunConfig\n\nagent = AnyAgent.create(\n    \"google\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    )\n)\n\nagent.run(\n    \"Which Agent Framework is the best??\",\n    run_config=RunConfig(\n        max_llm_calls=3\n    )\n)\n</code></pre>"},{"location":"frameworks/google_adk/#using-handoff","title":"Using <code>handoff</code>","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, show_final_output, visit_webpage\n\nmain_agent = AgentConfig(\n    model_id=\"o3-mini\",\n)\n\nmanaged_agents = [\n    AgentConfig(\n        model_id=\"gpt-4o\",\n        name=\"search-web-agent\",\n        tools=[\n            search_web,\n            visit_webpage,\n        ],\n    ),\n    AgentConfig(\n        model_id=\"gpt-4o-mini\",\n        name=\"communication-agent\",\n        tools=[show_final_output],\n        agent_args={\n            \"handoff\": True\n        }\n    ),\n]\n\nAnyAgent.create(\n    \"google\",\n    main_agent,\n    managed_agents=managed_agents,\n)\n</code></pre>"},{"location":"frameworks/langchain/","title":"LangChain","text":"<p>https://github.com/langchain-ai/langchain</p> <p>https://github.com/langchain-ai/langgraph</p>"},{"location":"frameworks/langchain/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>langgraph.prebuilt.create_react_agent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/langchain/#default-model-type","title":"Default Model Type","text":"<p>We use <code>langchain_litellm.ChatLiteLLM</code> Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/langchain/#run-args","title":"Run args","text":"<p>Check <code>RunnableConfig</code> to find additional supported <code>AnyAgent.run</code> args.</p>"},{"location":"frameworks/langchain/#examples","title":"Examples","text":""},{"location":"frameworks/langchain/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, visit_webpage\nfrom langchain_core.runnables import RunnableConfig\n\nagent = AnyAgent.create(\n    \"langchain\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    )\n)\n\nagent.run(\n    \"Which Agent Framework is the best??\",\n    config=RunnableConfig(\n        recursion_limit=3\n    )\n)\n</code></pre>"},{"location":"frameworks/llama_index/","title":"LlamaIndex","text":"<p>https://github.com/run-llama/llama_index</p>"},{"location":"frameworks/llama_index/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>llama_index.core.agent.workflow.react_agent.ReActAgent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/llama_index/#default-model-type","title":"Default Model Type","text":"<p>We use <code>llama_index.llms.litellm.LiteLLM</code> as default. Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/llama_index/#examples","title":"Examples","text":""},{"location":"frameworks/llama_index/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<p>Pending on https://github.com/run-llama/llama_index/issues/18535</p>"},{"location":"frameworks/openai/","title":"OpenAI Agents SDK","text":"<p>https://github.com/openai/openai-agents-python</p>"},{"location":"frameworks/openai/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>agents.Agent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/openai/#default-model-type","title":"Default Model Type","text":"<p>We use <code>agents.extensions.models.litellm_model.LitellmModel</code> as default. Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/openai/#run-args","title":"Run args","text":"<p>Check <code>agents.run.Runner.run</code> to find additional supported <code>AnyAgent.run</code> args.</p>"},{"location":"frameworks/openai/#examples","title":"Examples","text":""},{"location":"frameworks/openai/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, visit_webpage\n\nagent = AnyAgent.create(\n    \"openai\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    )\n)\n\nagent.run(\n    \"Which Agent Framework is the best??\",\n    max_turns=3\n)\n</code></pre>"},{"location":"frameworks/openai/#using-handoff","title":"Using <code>handoff</code>","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, show_final_output, visit_webpage\n\nmain_agent = AgentConfig(\n    model_id=\"o3-mini\",\n)\n\nmanaged_agents = [\n    AgentConfig(\n        model_id=\"gpt-4o\",\n        name=\"search-web-agent\",\n        tools=[\n            search_web,\n            visit_webpage,\n        ],\n    ),\n    AgentConfig(\n        model_id=\"gpt-4o-mini\",\n        name=\"communication-agent\",\n        tools=[show_final_output],\n        agent_args={\n            \"handoff\": True\n        }\n    ),\n]\n\nAnyAgent.create(\n    \"openai\",\n    main_agent,\n    managed_agents=managed_agents,\n)\n</code></pre>"},{"location":"frameworks/smolagents/","title":"smolagents","text":"<p>https://github.com/huggingface/smolagents</p>"},{"location":"frameworks/smolagents/#default-agent-type","title":"Default Agent Type","text":"<p>We use <code>smolagents.ToolCallingAgent</code> as default. Check the reference to find additional supported <code>agent_args</code>.</p>"},{"location":"frameworks/smolagents/#default-model-type","title":"Default Model Type","text":"<p>We use <code>smolagents.LiteLLMModel</code> as default. Check the reference to find additional supported <code>model_args</code>.</p>"},{"location":"frameworks/smolagents/#run-args","title":"Run args","text":"<p>Check <code>smolagents.MultiStepAgent.run</code> to find additional supported <code>AnyAgent.run</code> args.</p>"},{"location":"frameworks/smolagents/#examples","title":"Examples","text":""},{"location":"frameworks/smolagents/#limiting-the-number-of-steps","title":"Limiting the number of steps","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.tools import search_web, visit_webpage\n\nagent = AnyAgent.create(\n    \"smolagents\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[search_web, visit_webpage]\n    )\n)\n\nagent.run(\n    \"Which Agent Framework is the best??\",\n    max_steps=3\n)\n</code></pre>"},{"location":"frameworks/tinyagent/","title":"TinyAgent","text":"<p>As part of the bare bones library, we provide our own Python implementation based on HuggingFace Tiny Agents.</p> <p>You can find it in <code>any_agent.frameworks.tinyagent</code>.</p>"},{"location":"frameworks/tinyagent/#examples","title":"Examples","text":""},{"location":"frameworks/tinyagent/#use-mcp-tools","title":"Use MCP Tools","text":"<pre><code>from any_agent import AnyAgent, AgentConfig\nfrom any_agent.config import MCPStdio\n\nagent = AnyAgent.create(\n    \"tinyagent\",\n    AgentConfig(\n        model_id=\"gpt-4.1-nano\",\n        instructions=\"You must use the available tools to find an answer\",\n        tools=[\n            MCPStdio(\n                command=\"uvx\",\n                args=[\"duckduckgo-mcp-server\"]\n            )\n        ]\n    )\n)\n\nresult = agent.run(\n    \"Which Agent Framework is the best??\"\n)\nprint(result.final_output)\n</code></pre>"}]}